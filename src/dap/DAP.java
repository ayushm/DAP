/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * DAP.java
 *
 * Created on Jan 3, 2012, 10:41:32 PM
 */
package dap;

import java.awt.Color;
import java.awt.Rectangle;
import java.util.*;
import javax.swing.event.TableModelEvent;
import java.awt.event.KeyEvent;
import javax.swing.JFrame;
import java.awt.print.PrinterException;
import javax.swing.BorderFactory;
import java.text.DateFormat;
import java.net.*;
import javax.swing.event.HyperlinkEvent;
import javax.swing.event.HyperlinkListener;
import java.io.IOException;
import java.awt.Toolkit;
import javax.swing.event.DocumentListener;
import javax.swing.event.DocumentEvent;
import javax.swing.DefaultComboBoxModel;
import javax.swing.MutableComboBoxModel;
import javax.swing.JComboBox;
import java.io.File;

/**
 * A class which displays the GUI and adds functionality to buttons and textfields.
 * @author Ayush Mehra
 */



public class DAP extends javax.swing.JFrame 
{
  
    
    
    /** Creates new form DAP */
    public DAP() {
        initComponents();
        
        mainPanel.setVisible(true);
        patronsMainPanel.setVisible(false);
        catalogMainPanel.setVisible(false);
        typesMainPanel.setVisible(false);       
        checkoutMainPanel.setVisible(false);
        searchResultsPanel.setVisible(false);
        reportMainPanel.setVisible(false);
       
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        typesListFrame = new javax.swing.JFrame();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        typesListTable = new javax.swing.JTable();
        patronsRemoveDialog = new javax.swing.JDialog();
        patronsRemoveDialogYesButton = new javax.swing.JButton();
        patronsRemoveDialogNoButton = new javax.swing.JButton();
        jLabel46 = new javax.swing.JLabel();
        patronsRemoveDialogPatronName = new javax.swing.JLabel();
        typesRemoveDialog = new javax.swing.JDialog();
        jLabel45 = new javax.swing.JLabel();
        typesRemoveDialogNoButton = new javax.swing.JButton();
        typesRemoveDialogYesButton = new javax.swing.JButton();
        typesRemoveDialogTypeName = new javax.swing.JLabel();
        catalogRemoveDialog = new javax.swing.JDialog();
        jLabel1 = new javax.swing.JLabel();
        catalogRemoveDialogYesButton = new javax.swing.JButton();
        catalogRemoveDialogNoButton = new javax.swing.JButton();
        catalogRemoveDialogItemName = new javax.swing.JLabel();
        displayMessageDialog = new javax.swing.JDialog();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        displayMessageDialogTextArea = new javax.swing.JTextArea();
        displayMessageDialogOkButton = new javax.swing.JButton();
        reportsButtonGroup = new javax.swing.ButtonGroup();
        sortButtonGroup = new javax.swing.ButtonGroup();
        patronSearchDialog = new javax.swing.JDialog();
        catalogSearchPanel2 = new javax.swing.JPanel();
        patronSearchDialogSearchButton = new javax.swing.JButton();
        patronSearchDialogComboBox = new javax.swing.JComboBox();
        patronSearchDialogSearchTextField = new javax.swing.JTextField();
        jScrollPane10 = new javax.swing.JScrollPane();
        patronSearchTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }

        };
        patronSearchSelectButton = new javax.swing.JButton();
        patronSearchCancelButton = new javax.swing.JButton();
        catalogSearchDialog = new javax.swing.JDialog();
        jScrollPane11 = new javax.swing.JScrollPane();
        catalogSearchTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }

        };
        catalogSearchSelectButton = new javax.swing.JButton();
        catalogSearchCancelButton = new javax.swing.JButton();
        catalogSearchPanel4 = new javax.swing.JPanel();
        catalogSearchDialogSearchButton = new javax.swing.JButton();
        catalogSearchDialogComboBox = new javax.swing.JComboBox();
        catalogSearchDialogSearchTextField = new javax.swing.JTextField();
        mainHelpFrame = new javax.swing.JFrame();
        helpSplitPane = new javax.swing.JSplitPane();
        helpScrollPane = new javax.swing.JScrollPane();
        helpTopicsList = new javax.swing.JList();
        helpPanel = new javax.swing.JPanel();
        helpScrollPane2 = new javax.swing.JScrollPane();
        helpPane = new javax.swing.JEditorPane();
        helpTopicLabel = new javax.swing.JLabel();
        aboutDialog = new javax.swing.JDialog();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        aboutEditorPane = new javax.swing.JEditorPane();
        backupDialog = new javax.swing.JDialog();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        backupDirectoryTextField = new javax.swing.JTextField();
        backupBrowseButton = new javax.swing.JButton();
        generateBackupButton = new javax.swing.JButton();
        generateBackupButton1 = new javax.swing.JButton();
        fileChooserDialog = new javax.swing.JDialog();
        fileChooser = new javax.swing.JFileChooser();
        jLabel14 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        restoreDialog = new javax.swing.JDialog();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        restoreDirectoryTextField = new javax.swing.JTextField();
        restoreBrowseButton = new javax.swing.JButton();
        generateRestoreButton = new javax.swing.JButton();
        generateRestoreCancelButton = new javax.swing.JButton();
        restoreCheckDialog = new javax.swing.JDialog();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane12 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        restoreCheckDialogNoButton = new javax.swing.JButton();
        restoreCheckYesButton = new javax.swing.JButton();
        mainPanel = new javax.swing.JPanel();
        mainSearchPanel = new javax.swing.JPanel();
        mainSearchButton = new javax.swing.JButton();
        mainSearchComboBox = new javax.swing.JComboBox();
        mainSearchTextField = new javax.swing.JTextField();
        mainFunctionsPanel = new javax.swing.JPanel();
        mainCatalogLabel = new javax.swing.JLabel();
        mainPatronsLabel = new javax.swing.JLabel();
        mainReportsLabel = new javax.swing.JLabel();
        mainTypesLabel = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        displayDate = new javax.swing.JLabel();
        checkoutReturnPanel = new javax.swing.JPanel();
        mainCheckoutLabel = new javax.swing.JLabel();
        typesMainPanel = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        typesTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        jLabel25 = new javax.swing.JLabel();
        typesEditButton = new javax.swing.JButton();
        typesSaveButton = new javax.swing.JButton();
        typesRemoveButton = new javax.swing.JButton();
        typesNewButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        typesDescriptionTextField = new javax.swing.JTextArea();
        jLabel26 = new javax.swing.JLabel();
        typesTypeTextField = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        typesHomeButton = new javax.swing.JButton();
        typesCancelButton = new javax.swing.JButton();
        catalogMainPanel = new javax.swing.JPanel();
        catalogMainLabel2 = new javax.swing.JLabel();
        catalogMainScrollPane2 = new javax.swing.JScrollPane();
        catalogTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }

        };
        catalogNewButton = new javax.swing.JButton();
        catalogRemoveButton = new javax.swing.JButton();
        catalogSaveButton = new javax.swing.JButton();
        catalogEditButton = new javax.swing.JButton();
        catalogHomeButton = new javax.swing.JButton();
        catalogCancelButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        catalogAuthorTextField = new javax.swing.JTextField();
        catalogPublishedDateTextField = new javax.swing.JTextField();
        catalogItemTextField = new javax.swing.JTextField();
        catalogItemNumberTextField = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        catalogTypeTextField = new javax.swing.JTextField();
        catalogSearchPanel = new javax.swing.JPanel();
        catalogSearchButton = new javax.swing.JButton();
        catalogSearchComboBox = new javax.swing.JComboBox();
        catalogSearchTextField = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        catalogFullCatalogButton = new javax.swing.JButton();
        searchResultsPanel = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchResultsTable = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        checkoutMainPanel = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        checkoutPatronNameTextField = new javax.swing.JTextField();
        checkoutTitleTextField = new javax.swing.JTextField();
        checkoutAuthorTextField = new javax.swing.JTextField();
        checkoutTypeTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        checkoutTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        checkoutCheckoutButton = new javax.swing.JButton();
        checkoutReturnButton = new javax.swing.JButton();
        checkoutReturnAllButton = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        checkoutItemNumberTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        checkoutPatronNumberTextField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        checkoutPatronSearchLabel = new javax.swing.JLabel();
        checkoutCatalogSearchLabel = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        checkoutItemsCurrentlyCheckedOutLabel = new javax.swing.JLabel();
        patronsMainPanel = new javax.swing.JPanel();
        patronsEditButton = new javax.swing.JButton();
        patronsRemoveButton = new javax.swing.JButton();
        patronsNewButton = new javax.swing.JButton();
        patronsSaveButton = new javax.swing.JButton();
        jLabel58 = new javax.swing.JLabel();
        jScrollPane9 = new javax.swing.JScrollPane();
        patronsTable = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex) {
                return false;   //Disallow the editing of any cell
            }
        };
        patronsHomeButton = new javax.swing.JButton();
        patronsCancelButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel56 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        patronNumberTextField = new javax.swing.JTextField();
        firstNameTextField = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        emailTextField = new javax.swing.JTextField();
        lastNameTextField = new javax.swing.JTextField();
        phoneTextField = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel62 = new javax.swing.JLabel();
        addressTextField = new javax.swing.JTextField();
        jLabel63 = new javax.swing.JLabel();
        stateTextField = new javax.swing.JTextField();
        cityTextField = new javax.swing.JTextField();
        jLabel59 = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        zipCodeTextField = new javax.swing.JTextField();
        patronSearchPanel = new javax.swing.JPanel();
        patronSearchButton = new javax.swing.JButton();
        patronSearchComboBox = new javax.swing.JComboBox();
        patronSearchTextField = new javax.swing.JTextField();
        patronsAllPatronsButton = new javax.swing.JButton();
        reportMainPanel = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        reportsScrollPane = new javax.swing.JScrollPane();
        reportTextArea = new javax.swing.JTextArea();
        reportPrintButton = new javax.swing.JButton();
        reportsHomeButton = new javax.swing.JButton();
        reportsAllItemsRadioButton = new javax.swing.JRadioButton();
        reportsCheckedOutItemsRadioButton = new javax.swing.JRadioButton();
        jLabel7 = new javax.swing.JLabel();
        reportsSortDateRadioButton = new javax.swing.JRadioButton();
        reportsSortPatronRadioButton = new javax.swing.JRadioButton();
        reportsTypesComboBox = new javax.swing.JComboBox();
        menuBar = new javax.swing.JMenuBar();
        mainMenuFile = new javax.swing.JMenu();
        saveChangesMenuItem = new javax.swing.JMenuItem();
        generateBackupMenuItem = new javax.swing.JMenuItem();
        restoreBackupMenuItem = new javax.swing.JMenuItem();
        mainMenuHelp = new javax.swing.JMenu();
        helpContentsMenuItem = new javax.swing.JMenuItem();
        aboutMenuItem = new javax.swing.JMenuItem();
        mainMenuOptions = new javax.swing.JMenu();
        instaSearchOnMenuItem = new javax.swing.JCheckBoxMenuItem();

        typesListFrame.setMinimumSize(new java.awt.Dimension(650, 300));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel6.setText("Types List");

        typesListTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        typesListTable.setFont(new java.awt.Font("Tahoma", 0, 14));
        typesListTable.setModel(new javax.swing.table.DefaultTableModel(
            DAPMain.typesData, DAPMain.typesHeader
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return false;
                // return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(typesListTable);

        javax.swing.GroupLayout typesListFrameLayout = new javax.swing.GroupLayout(typesListFrame.getContentPane());
        typesListFrame.getContentPane().setLayout(typesListFrameLayout);
        typesListFrameLayout.setHorizontalGroup(
            typesListFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(typesListFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(typesListFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(typesListFrameLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(typesListFrameLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(360, 500, Short.MAX_VALUE))))
        );
        typesListFrameLayout.setVerticalGroup(
            typesListFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(typesListFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(11, 11, 11)
                .addComponent(jScrollPane3)
                .addContainerGap())
        );

        patronsRemoveDialog.setTitle("Remove Patron");
        patronsRemoveDialog.setAlwaysOnTop(true);
        patronsRemoveDialog.setLocationByPlatform(true);
        patronsRemoveDialog.setMinimumSize(new java.awt.Dimension(380, 215));
        patronsRemoveDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        patronsRemoveDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        patronsRemoveDialog.setResizable(false);

        patronsRemoveDialogYesButton.setText("YES");
        patronsRemoveDialogYesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patronsRemoveDialogYesButtonActionPerformed(evt);
            }
        });

        patronsRemoveDialogNoButton.setText("NO");
        patronsRemoveDialogNoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patronsRemoveDialogNoButtonActionPerformed(evt);
            }
        });

        jLabel46.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel46.setText("Are you sure you want to delete this patron?");

        patronsRemoveDialogPatronName.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        patronsRemoveDialogPatronName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        patronsRemoveDialogPatronName.setText("jLabel8");

        javax.swing.GroupLayout patronsRemoveDialogLayout = new javax.swing.GroupLayout(patronsRemoveDialog.getContentPane());
        patronsRemoveDialog.getContentPane().setLayout(patronsRemoveDialogLayout);
        patronsRemoveDialogLayout.setHorizontalGroup(
            patronsRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patronsRemoveDialogLayout.createSequentialGroup()
                .addGroup(patronsRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(patronsRemoveDialogLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addComponent(jLabel46))
                    .addGroup(patronsRemoveDialogLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(patronsRemoveDialogYesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(patronsRemoveDialogNoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(patronsRemoveDialogLayout.createSequentialGroup()
                        .addGap(54, 54, 54)
                        .addComponent(patronsRemoveDialogPatronName, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        patronsRemoveDialogLayout.setVerticalGroup(
            patronsRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(patronsRemoveDialogLayout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jLabel46)
                .addGap(29, 29, 29)
                .addComponent(patronsRemoveDialogPatronName)
                .addGap(30, 30, 30)
                .addGroup(patronsRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(patronsRemoveDialogYesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(patronsRemoveDialogNoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(31, Short.MAX_VALUE))
        );

        typesRemoveDialog.setTitle("Remove Type");
        typesRemoveDialog.setLocationByPlatform(true);
        typesRemoveDialog.setMinimumSize(new java.awt.Dimension(400, 210));
        typesRemoveDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        typesRemoveDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        typesRemoveDialog.setResizable(false);

        jLabel45.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel45.setText("Are you sure you want to delete this type?");

        typesRemoveDialogNoButton.setText("NO");
        typesRemoveDialogNoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typesRemoveDialogNoButtonActionPerformed(evt);
            }
        });

        typesRemoveDialogYesButton.setText("YES");
        typesRemoveDialogYesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                typesRemoveDialogYesButtonActionPerformed(evt);
            }
        });

        typesRemoveDialogTypeName.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        typesRemoveDialogTypeName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        typesRemoveDialogTypeName.setText("jLabel8");

        javax.swing.GroupLayout typesRemoveDialogLayout = new javax.swing.GroupLayout(typesRemoveDialog.getContentPane());
        typesRemoveDialog.getContentPane().setLayout(typesRemoveDialogLayout);
        typesRemoveDialogLayout.setHorizontalGroup(
            typesRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(typesRemoveDialogLayout.createSequentialGroup()
                .addGroup(typesRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(typesRemoveDialogLayout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addGroup(typesRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel45, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(typesRemoveDialogTypeName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(typesRemoveDialogLayout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(typesRemoveDialogYesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(typesRemoveDialogNoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(50, Short.MAX_VALUE))
        );

        typesRemoveDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {typesRemoveDialogNoButton, typesRemoveDialogYesButton});

        typesRemoveDialogLayout.setVerticalGroup(
            typesRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(typesRemoveDialogLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel45)
                .addGap(18, 18, 18)
                .addComponent(typesRemoveDialogTypeName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(typesRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(typesRemoveDialogYesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(typesRemoveDialogNoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );

        typesRemoveDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {typesRemoveDialogNoButton, typesRemoveDialogYesButton});

        catalogRemoveDialog.setTitle("Remove Item");
        catalogRemoveDialog.setLocationByPlatform(true);
        catalogRemoveDialog.setMinimumSize(new java.awt.Dimension(477, 215));
        catalogRemoveDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        catalogRemoveDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        catalogRemoveDialog.setResizable(false);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Are you sure you want to remove this item from the catalog?");

        catalogRemoveDialogYesButton.setText("YES");
        catalogRemoveDialogYesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catalogRemoveDialogYesButtonActionPerformed(evt);
            }
        });

        catalogRemoveDialogNoButton.setText("NO");
        catalogRemoveDialogNoButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                catalogRemoveDialogNoButtonActionPerformed(evt);
            }
        });

        catalogRemoveDialogItemName.setFont(new java.awt.Font("Tahoma", 2, 14)); // NOI18N
        catalogRemoveDialogItemName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        catalogRemoveDialogItemName.setText("jLabel8");

        javax.swing.GroupLayout catalogRemoveDialogLayout = new javax.swing.GroupLayout(catalogRemoveDialog.getContentPane());
        catalogRemoveDialog.getContentPane().setLayout(catalogRemoveDialogLayout);
        catalogRemoveDialogLayout.setHorizontalGroup(
            catalogRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catalogRemoveDialogLayout.createSequentialGroup()
                .addGroup(catalogRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(catalogRemoveDialogItemName, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(catalogRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(catalogRemoveDialogLayout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(jLabel1))
                        .addGroup(catalogRemoveDialogLayout.createSequentialGroup()
                            .addGap(116, 116, 116)
                            .addComponent(catalogRemoveDialogYesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(52, 52, 52)
                            .addComponent(catalogRemoveDialogNoButton))))
                .addContainerGap(32, Short.MAX_VALUE))
        );

        catalogRemoveDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {catalogRemoveDialogNoButton, catalogRemoveDialogYesButton});

        catalogRemoveDialogLayout.setVerticalGroup(
            catalogRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(catalogRemoveDialogLayout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, Short.MAX_VALUE)
                .addComponent(catalogRemoveDialogItemName)
                .addGap(32, 32, 32)
                .addGroup(catalogRemoveDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(catalogRemoveDialogYesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(catalogRemoveDialogNoButton))
                .addGap(33, 33, 33))
        );

        catalogRemoveDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {catalogRemoveDialogNoButton, catalogRemoveDialogYesButton});

        displayMessageDialog.setLocationByPlatform(true);
        displayMessageDialog.setMinimumSize(new java.awt.Dimension(459, 270));
        displayMessageDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        displayMessageDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);
        displayMessageDialog.setResizable(false);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/warning48.png"))); // NOI18N
        jLabel12.setText("Uh-Oh!");

        displayMessageDialogTextArea.setColumns(20);
        displayMessageDialogTextArea.setEditable(false);
        displayMessageDialogTextArea.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        displayMessageDialogTextArea.setLineWrap(true);
        displayMessageDialogTextArea.setRows(5);
        jScrollPane4.setViewportView(displayMessageDialogTextArea);

        displayMessageDialogOkButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        displayMessageDialogOkButton.setText("OK");
        displayMessageDialogOkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                displayMessageDialogOkButtonActionPerformed(evt);
            }
        });
        displayMessageDialogOkButton.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                displayMessageDialogOkButtonKeyPressed(evt);
            }
        });

        javax.swing.GroupLayout displayMessageDialogLayout = new javax.swing.GroupLayout(displayMessageDialog.getContentPane());
        displayMessageDialog.getContentPane().setLayout(displayMessageDialogLayout);
        displayMessageDialogLayout.setHorizontalGroup(
            displayMessageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayMessageDialogLayout.createSequentialGroup()
                .addGroup(displayMessageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(displayMessageDialogLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(displayMessageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(displayMessageDialogOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(displayMessageDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel12)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        displayMessageDialogLayout.setVerticalGroup(
            displayMessageDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(displayMessageDialogLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel12)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(displayMessageDialogOkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );

        patronSearchDialog.setTitle("Find Patron ID");
        patronSearchDialog.setIconImage(null);
        patronSearchDialog.setLocationByPlatform(true);
        patronSearchDialog.setMinimumSize(new java.awt.Dimension(703, 340));
        patronSearchDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
        patronSearchDialog.setModalityType(java.awt.Dialog.ModalityType.APPLICATION_MODAL);

        catalogSearchPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 0), 2, true));

        patronSearchDialogSearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/searchButtonIcon.png"))); // NOI18N
        patronSearchDialogSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                patronSearchDialogSearchButtonActionPerformed(evt);
            }
        });

        patronSearchDialogComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        patronSearchDialogComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "First Name", "Last Name", "Patron Number" }));

        patronSearchDialogSearchTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        patronSearchDialogSearchTextField.setText("Search Patrons...");
        patronSearchDialogSearchTextField.getDocument().addDocumentListener(new DocumentListener() {
            public void changedUpdate(DocumentEvent e) {
                String searchType = patronSearchDialogComboBox.getSelectedItem().toString();
                String searchText = patronSearchDialogSearchTextField.getText().toLowerCase();

                if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Patrons...")&& !searchText.equals(" ") && !searchType.equals("Patron Number"))
                DAPUtil.search("patronSearchDialog",searchType,searchText);
                if(searchText.equals(""))
                {
                    DataInit.hashmapToArrayPatrons();
                    patronSearchTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.patronsData, DAPMain.patronsHeader));
                }
            }
            public void removeUpdate(DocumentEvent e) {
                String searchType = patronSearchDialogComboBox.getSelectedItem().toString();
                String searchText = patronSearchDialogSearchTextField.getText().toLowerCase();

                if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Patrons...") && !searchText.equals(" ") && !searchType.equals("Patron Number"))
                DAPUtil.search("patronSearchDialog",searchType,searchText);
                if(searchText.equals(""))
                {
                    DataInit.hashmapToArrayPatrons();
                    patronSearchTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.patronsData, DAPMain.patronsHeader));
                }
            }
            public void insertUpdate(DocumentEvent e) {
                String searchType = patronSearchDialogComboBox.getSelectedItem().toString();
                String searchText = patronSearchDialogSearchTextField.getText().toLowerCase();

                if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Patrons...") && !searchText.equals(" ") && !searchType.equals("Patron Number"))
                DAPUtil.search("patronSearchDialog",searchType,searchText);
            }});
            patronSearchDialogSearchTextField.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    patronSearchDialogSearchTextFieldActionPerformed(evt);
                }
            });
            patronSearchDialogSearchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                public void focusGained(java.awt.event.FocusEvent evt) {
                    patronSearchDialogSearchTextFieldFocusGained(evt);
                }
            });
            patronSearchDialogSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyPressed(java.awt.event.KeyEvent evt) {
                    patronSearchDialogSearchTextFieldKeyPressed(evt);
                }
            });

            javax.swing.GroupLayout catalogSearchPanel2Layout = new javax.swing.GroupLayout(catalogSearchPanel2);
            catalogSearchPanel2.setLayout(catalogSearchPanel2Layout);
            catalogSearchPanel2Layout.setHorizontalGroup(
                catalogSearchPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogSearchPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(patronSearchDialogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(patronSearchDialogSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(patronSearchDialogSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            catalogSearchPanel2Layout.setVerticalGroup(
                catalogSearchPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogSearchPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(catalogSearchPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                        .addComponent(patronSearchDialogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(patronSearchDialogSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(patronSearchDialogSearchButton))
                    .addContainerGap())
            );

            DataInit.hashmapToArrayPatrons();
            patronSearchTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.patronsData, DAPMain.patronsHeader));
            patronSearchTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
            jScrollPane10.setViewportView(patronSearchTable);

            patronSearchSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/select16.png"))); // NOI18N
            patronSearchSelectButton.setText("Select");
            patronSearchSelectButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    patronSearchSelectButtonActionPerformed(evt);
                }
            });

            patronSearchCancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/cancel16.png"))); // NOI18N
            patronSearchCancelButton.setText("Cancel");
            patronSearchCancelButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    patronSearchCancelButtonActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout patronSearchDialogLayout = new javax.swing.GroupLayout(patronSearchDialog.getContentPane());
            patronSearchDialog.getContentPane().setLayout(patronSearchDialogLayout);
            patronSearchDialogLayout.setHorizontalGroup(
                patronSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(patronSearchDialogLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(patronSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(patronSearchDialogLayout.createSequentialGroup()
                            .addComponent(jScrollPane10)
                            .addContainerGap())
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patronSearchDialogLayout.createSequentialGroup()
                            .addGap(0, 97, Short.MAX_VALUE)
                            .addGroup(patronSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patronSearchDialogLayout.createSequentialGroup()
                                    .addComponent(catalogSearchPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(93, 93, 93))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patronSearchDialogLayout.createSequentialGroup()
                                    .addComponent(patronSearchCancelButton)
                                    .addGap(56, 56, 56)
                                    .addComponent(patronSearchSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap())))))
            );

            patronSearchDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {patronSearchCancelButton, patronSearchSelectButton});

            patronSearchDialogLayout.setVerticalGroup(
                patronSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(patronSearchDialogLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(catalogSearchPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(18, 18, 18)
                    .addGroup(patronSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(patronSearchSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(patronSearchCancelButton))
                    .addContainerGap(25, Short.MAX_VALUE))
            );

            patronSearchDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {patronSearchCancelButton, patronSearchSelectButton});

            catalogSearchDialog.setTitle("Find Item Number");
            catalogSearchDialog.setLocationByPlatform(true);
            catalogSearchDialog.setMinimumSize(new java.awt.Dimension(703, 340));
            catalogSearchDialog.setModal(true);
            catalogSearchDialog.setModalExclusionType(java.awt.Dialog.ModalExclusionType.APPLICATION_EXCLUDE);
            catalogSearchDialog.setResizable(false);

            catalogSearchTable.setModel(new javax.swing.table.DefaultTableModel(
                new Object [][] {

                },
                new String [] {
                    "Item #", "Title", "Author", "Published Date", "Type"
                }
            ));
            catalogSearchTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
            jScrollPane11.setViewportView(catalogSearchTable);

            catalogSearchSelectButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/select16.png"))); // NOI18N
            catalogSearchSelectButton.setText("Select");
            catalogSearchSelectButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    catalogSearchSelectButtonActionPerformed(evt);
                }
            });

            catalogSearchCancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/cancel16.png"))); // NOI18N
            catalogSearchCancelButton.setText("Cancel");
            catalogSearchCancelButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    catalogSearchCancelButtonActionPerformed(evt);
                }
            });

            catalogSearchPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 0), 2, true));

            catalogSearchDialogSearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/searchButtonIcon.png"))); // NOI18N
            catalogSearchDialogSearchButton.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    catalogSearchDialogSearchButtonActionPerformed(evt);
                }
            });

            catalogSearchDialogComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            catalogSearchDialogComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title", "Author", "Item Number" }));

            catalogSearchDialogSearchTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            catalogSearchDialogSearchTextField.setText("Search Catalog...");
            catalogSearchDialogSearchTextField.getDocument().addDocumentListener(new DocumentListener() {
                public void changedUpdate(DocumentEvent e) {
                    String searchType = catalogSearchDialogComboBox.getSelectedItem().toString();
                    String searchText = catalogSearchDialogSearchTextField.getText().toLowerCase();

                    if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Catalog...") && !searchText.equals(" ")&& !searchType.equals("Item Number"))
                    DAPUtil.search("catalogSearchDialog",searchType,searchText);
                    if(searchText.equals(""))
                    {
                        DataInit.hashmapToArrayLibrary();
                        DAP.catalogSearchTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.itemsData, DAPMain.itemsHeader));
                    }
                }
                public void removeUpdate(DocumentEvent e) {
                    String searchType = catalogSearchDialogComboBox.getSelectedItem().toString();
                    String searchText = catalogSearchDialogSearchTextField.getText().toLowerCase();

                    if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Catalog...") && !searchText.equals(" ") && !searchType.equals("Item Number"))
                    DAPUtil.search("catalogSearchDialog",searchType,searchText);
                    if(searchText.equals(""))
                    {
                        DataInit.hashmapToArrayLibrary();
                        DAP.catalogSearchTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.itemsData, DAPMain.itemsHeader));
                    }
                }
                public void insertUpdate(DocumentEvent e) {
                    String searchType = catalogSearchDialogComboBox.getSelectedItem().toString();
                    String searchText = catalogSearchDialogSearchTextField.getText().toLowerCase();

                    if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Catalog...") && !searchText.equals(" ") && !searchType.equals("Item Number"))
                    DAPUtil.search("catalogSearchDialog",searchType,searchText);
                }});
                catalogSearchDialogSearchTextField.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        catalogSearchDialogSearchTextFieldActionPerformed(evt);
                    }
                });
                catalogSearchDialogSearchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        catalogSearchDialogSearchTextFieldFocusGained(evt);
                    }
                });
                catalogSearchDialogSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        catalogSearchDialogSearchTextFieldKeyPressed(evt);
                    }
                });

                javax.swing.GroupLayout catalogSearchPanel4Layout = new javax.swing.GroupLayout(catalogSearchPanel4);
                catalogSearchPanel4.setLayout(catalogSearchPanel4Layout);
                catalogSearchPanel4Layout.setHorizontalGroup(
                    catalogSearchPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogSearchPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(catalogSearchDialogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(catalogSearchDialogSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(catalogSearchDialogSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                catalogSearchPanel4Layout.setVerticalGroup(
                    catalogSearchPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogSearchPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(catalogSearchPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(catalogSearchDialogComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(catalogSearchDialogSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(catalogSearchDialogSearchButton))
                        .addContainerGap())
                );

                javax.swing.GroupLayout catalogSearchDialogLayout = new javax.swing.GroupLayout(catalogSearchDialog.getContentPane());
                catalogSearchDialog.getContentPane().setLayout(catalogSearchDialogLayout);
                catalogSearchDialogLayout.setHorizontalGroup(
                    catalogSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(catalogSearchDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(catalogSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(catalogSearchDialogLayout.createSequentialGroup()
                                .addComponent(jScrollPane11)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogSearchDialogLayout.createSequentialGroup()
                                .addGap(0, 105, Short.MAX_VALUE)
                                .addGroup(catalogSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogSearchDialogLayout.createSequentialGroup()
                                        .addComponent(catalogSearchCancelButton)
                                        .addGap(56, 56, 56)
                                        .addComponent(catalogSearchSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogSearchDialogLayout.createSequentialGroup()
                                        .addComponent(catalogSearchPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(85, 85, 85))))))
                );

                catalogSearchDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {catalogSearchCancelButton, catalogSearchSelectButton});

                catalogSearchDialogLayout.setVerticalGroup(
                    catalogSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(catalogSearchDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(catalogSearchPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane11, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(catalogSearchDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(catalogSearchSelectButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(catalogSearchCancelButton))
                        .addContainerGap(34, Short.MAX_VALUE))
                );

                catalogSearchDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {catalogSearchCancelButton, catalogSearchSelectButton});

                mainHelpFrame.setTitle("Help");
                mainHelpFrame.setBounds(new java.awt.Rectangle(0, 0, 1300, 700));
                mainHelpFrame.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowOpened(java.awt.event.WindowEvent evt) {
                        mainHelpFrameWindowOpened(evt);
                    }
                });
                mainHelpFrame.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        mainHelpFrameFocusGained(evt);
                    }
                });
                mainHelpFrame.addWindowStateListener(new java.awt.event.WindowStateListener() {
                    public void windowStateChanged(java.awt.event.WindowEvent evt) {
                        mainHelpFrameWindowStateChanged(evt);
                    }
                });

                helpSplitPane.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
                helpSplitPane.setDividerLocation(200);
                helpSplitPane.setAutoscrolls(true);
                helpSplitPane.setContinuousLayout(true);
                helpSplitPane.setLastDividerLocation(200);
                helpSplitPane.setOneTouchExpandable(true);

                helpTopicsList.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
                helpTopicsList.setModel(new javax.swing.AbstractListModel() {
                    String[] strings = { "General", "Patrons", "Types", "Catalog", "Checkout & Returns", "Reports", "Backup & Restore", "About" };
                    public int getSize() { return strings.length; }
                    public Object getElementAt(int i) { return strings[i]; }
                });
                helpTopicsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                helpTopicsList.setName("helpTopicsList");
                helpTopicsList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
                    public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                        helpTopicsListValueChanged(evt);
                    }
                });
                helpScrollPane.setViewportView(helpTopicsList);

                helpSplitPane.setLeftComponent(helpScrollPane);

                helpPanel.setLayout(new java.awt.GridBagLayout());

                helpPane.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
                helpScrollPane2.setViewportView(helpPane);

                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 1;
                gridBagConstraints.gridwidth = 2;
                gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
                gridBagConstraints.ipadx = 466;
                gridBagConstraints.ipady = 456;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.weightx = 1.0;
                gridBagConstraints.weighty = 1.0;
                gridBagConstraints.insets = new java.awt.Insets(6, 10, 11, 10);
                helpPanel.add(helpScrollPane2, gridBagConstraints);

                helpTopicLabel.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                helpTopicLabel.setText("General");
                gridBagConstraints = new java.awt.GridBagConstraints();
                gridBagConstraints.gridx = 0;
                gridBagConstraints.gridy = 0;
                gridBagConstraints.ipadx = 116;
                gridBagConstraints.ipady = 4;
                gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
                gridBagConstraints.insets = new java.awt.Insets(11, 10, 0, 0);
                helpPanel.add(helpTopicLabel, gridBagConstraints);

                helpSplitPane.setRightComponent(helpPanel);

                javax.swing.GroupLayout mainHelpFrameLayout = new javax.swing.GroupLayout(mainHelpFrame.getContentPane());
                mainHelpFrame.getContentPane().setLayout(mainHelpFrameLayout);
                mainHelpFrameLayout.setHorizontalGroup(
                    mainHelpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(helpSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 979, Short.MAX_VALUE)
                );
                mainHelpFrameLayout.setVerticalGroup(
                    mainHelpFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainHelpFrameLayout.createSequentialGroup()
                        .addComponent(helpSplitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 689, Short.MAX_VALUE)
                        .addContainerGap())
                );

                aboutDialog.setTitle("About");
                aboutDialog.setMinimumSize(new java.awt.Dimension(630, 452));
                aboutDialog.setResizable(false);

                jLabel9.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/about32.png"))); // NOI18N
                jLabel9.setText("About");

                jScrollPane6.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
                jScrollPane6.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

                aboutEditorPane.setEditable(false);
                jScrollPane6.setViewportView(aboutEditorPane);

                javax.swing.GroupLayout aboutDialogLayout = new javax.swing.GroupLayout(aboutDialog.getContentPane());
                aboutDialog.getContentPane().setLayout(aboutDialogLayout);
                aboutDialogLayout.setHorizontalGroup(
                    aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutDialogLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(aboutDialogLayout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane6))
                        .addContainerGap())
                );
                aboutDialogLayout.setVerticalGroup(
                    aboutDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(aboutDialogLayout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 389, Short.MAX_VALUE)
                        .addContainerGap())
                );

                backupDialog.setTitle("Backup Data");
                backupDialog.setLocationByPlatform(true);
                backupDialog.setMinimumSize(new java.awt.Dimension(560, 220));
                backupDialog.setResizable(false);

                jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/backupColor48.png"))); // NOI18N
                jLabel10.setText("Generate Backup Files");

                jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel11.setText("Directory:");

                backupDirectoryTextField.setText("jTextField1");

                backupBrowseButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
                backupBrowseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/browse16.png"))); // NOI18N
                backupBrowseButton.setText("Browse");
                backupBrowseButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        backupBrowseButtonActionPerformed(evt);
                    }
                });

                generateBackupButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
                generateBackupButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/backupButton24.png"))); // NOI18N
                generateBackupButton.setText("Generate");
                generateBackupButton.setIconTextGap(8);
                generateBackupButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        generateBackupButtonActionPerformed(evt);
                    }
                });

                generateBackupButton1.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
                generateBackupButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/cancel24.png"))); // NOI18N
                generateBackupButton1.setText("Cancel");
                generateBackupButton1.setIconTextGap(8);
                generateBackupButton1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        generateBackupButton1ActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout backupDialogLayout = new javax.swing.GroupLayout(backupDialog.getContentPane());
                backupDialog.getContentPane().setLayout(backupDialogLayout);
                backupDialogLayout.setHorizontalGroup(
                    backupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backupDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(backupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(backupDialogLayout.createSequentialGroup()
                                .addComponent(generateBackupButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(generateBackupButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(backupDialogLayout.createSequentialGroup()
                                .addGroup(backupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel10)
                                    .addGroup(backupDialogLayout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(backupDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(backupBrowseButton)))
                        .addContainerGap(17, Short.MAX_VALUE))
                );
                backupDialogLayout.setVerticalGroup(
                    backupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(backupDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addGroup(backupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel11)
                            .addComponent(backupDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(backupBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(backupDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generateBackupButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(generateBackupButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27))
                );

                backupDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {backupBrowseButton, backupDirectoryTextField, jLabel11});

                fileChooserDialog.setTitle("Select Directory");
                fileChooserDialog.setLocationByPlatform(true);
                fileChooserDialog.setMinimumSize(new java.awt.Dimension(580, 495));
                fileChooserDialog.setResizable(false);

                fileChooser.setFileHidingEnabled(true);
                fileChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);

                jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                jLabel14.setText("Directory Finder");

                jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jButton1.setText("Use Directory");
                jButton1.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        jButton1ActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout fileChooserDialogLayout = new javax.swing.GroupLayout(fileChooserDialog.getContentPane());
                fileChooserDialog.getContentPane().setLayout(fileChooserDialogLayout);
                fileChooserDialogLayout.setHorizontalGroup(
                    fileChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fileChooserDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(fileChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(fileChooserDialogLayout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 548, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 20, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, fileChooserDialogLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addGroup(fileChooserDialogLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addContainerGap())))
                );
                fileChooserDialogLayout.setVerticalGroup(
                    fileChooserDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(fileChooserDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(fileChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                restoreDialog.setTitle("Restore Data");
                restoreDialog.setLocationByPlatform(true);
                restoreDialog.setMinimumSize(new java.awt.Dimension(560, 220));
                restoreDialog.setResizable(false);

                jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/backupColor48.png"))); // NOI18N
                jLabel15.setText("Restore From Backup");

                jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel16.setText("Directory:");

                restoreDirectoryTextField.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        restoreDirectoryTextFieldActionPerformed(evt);
                    }
                });

                restoreBrowseButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
                restoreBrowseButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/browse16.png"))); // NOI18N
                restoreBrowseButton.setText("Browse");
                restoreBrowseButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        restoreBrowseButtonActionPerformed(evt);
                    }
                });

                generateRestoreButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
                generateRestoreButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/backupButton24.png"))); // NOI18N
                generateRestoreButton.setText("Restore");
                generateRestoreButton.setIconTextGap(8);
                generateRestoreButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        generateRestoreButtonActionPerformed(evt);
                    }
                });

                generateRestoreCancelButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
                generateRestoreCancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/cancel24.png"))); // NOI18N
                generateRestoreCancelButton.setText("Cancel");
                generateRestoreCancelButton.setIconTextGap(8);
                generateRestoreCancelButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        generateRestoreCancelButtonActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout restoreDialogLayout = new javax.swing.GroupLayout(restoreDialog.getContentPane());
                restoreDialog.getContentPane().setLayout(restoreDialogLayout);
                restoreDialogLayout.setHorizontalGroup(
                    restoreDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(restoreDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(restoreDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(restoreDialogLayout.createSequentialGroup()
                                .addGroup(restoreDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addGroup(restoreDialogLayout.createSequentialGroup()
                                        .addComponent(jLabel16)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(restoreDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 343, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(restoreBrowseButton))
                            .addGroup(restoreDialogLayout.createSequentialGroup()
                                .addComponent(generateRestoreCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(37, 37, 37)
                                .addComponent(generateRestoreButton, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap(17, Short.MAX_VALUE))
                );
                restoreDialogLayout.setVerticalGroup(
                    restoreDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(restoreDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addGroup(restoreDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(jLabel16)
                            .addComponent(restoreDirectoryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restoreBrowseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(restoreDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(generateRestoreButton, javax.swing.GroupLayout.DEFAULT_SIZE, 46, Short.MAX_VALUE)
                            .addComponent(generateRestoreCancelButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(27, 27, 27))
                );

                restoreDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel16, restoreBrowseButton, restoreDirectoryTextField});

                restoreCheckDialog.setTitle("Restore-Check");
                restoreCheckDialog.setLocationByPlatform(true);
                restoreCheckDialog.setMinimumSize(new java.awt.Dimension(415, 187));
                restoreCheckDialog.setResizable(false);

                jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                jLabel17.setText("Are You Sure You Want To Restore Data?");

                jTextPane1.setEditable(false);
                jTextPane1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                jTextPane1.setText("Doing so will over-write any existing data with the data saved during the last backup.");
                jScrollPane12.setViewportView(jTextPane1);

                restoreCheckDialogNoButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                restoreCheckDialogNoButton.setText("NO");
                restoreCheckDialogNoButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        restoreCheckDialogNoButtonActionPerformed(evt);
                    }
                });

                restoreCheckYesButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                restoreCheckYesButton.setText("YES");
                restoreCheckYesButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        restoreCheckYesButtonActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout restoreCheckDialogLayout = new javax.swing.GroupLayout(restoreCheckDialog.getContentPane());
                restoreCheckDialog.getContentPane().setLayout(restoreCheckDialogLayout);
                restoreCheckDialogLayout.setHorizontalGroup(
                    restoreCheckDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(restoreCheckDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(restoreCheckDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(restoreCheckDialogLayout.createSequentialGroup()
                                .addGap(0, 23, Short.MAX_VALUE)
                                .addGroup(restoreCheckDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(restoreCheckDialogLayout.createSequentialGroup()
                                        .addComponent(restoreCheckDialogNoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(30, 30, 30)
                                        .addComponent(restoreCheckYesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane12, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(34, 34, 34))
                            .addGroup(restoreCheckDialogLayout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addGap(0, 0, Short.MAX_VALUE))))
                );

                restoreCheckDialogLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {restoreCheckDialogNoButton, restoreCheckYesButton});

                restoreCheckDialogLayout.setVerticalGroup(
                    restoreCheckDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(restoreCheckDialogLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane12, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(restoreCheckDialogLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(restoreCheckYesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(restoreCheckDialogNoButton, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                );

                restoreCheckDialogLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {restoreCheckDialogNoButton, restoreCheckYesButton});

                setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
                setTitle("Library Management System");
                setIconImages(null);
                addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosed(java.awt.event.WindowEvent evt) {
                        formWindowClosed(evt);
                    }
                    public void windowOpened(java.awt.event.WindowEvent evt) {
                        formWindowOpened(evt);
                    }
                });

                mainPanel.setPreferredSize(new java.awt.Dimension(590, 290));
                mainPanel.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        mainPanelMouseEntered(evt);
                    }
                });
                mainPanel.addComponentListener(new java.awt.event.ComponentAdapter() {
                    public void componentShown(java.awt.event.ComponentEvent evt) {
                        mainPanelComponentShown(evt);
                    }
                });
                mainPanel.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        mainPanelFocusGained(evt);
                    }
                });

                mainSearchPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 0), 2, true));

                mainSearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/searchButtonIcon.png"))); // NOI18N
                mainSearchButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        mainSearchButtonActionPerformed(evt);
                    }
                });

                mainSearchComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                mainSearchComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title", "Author", "Item Number" }));

                mainSearchTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                mainSearchTextField.setText("Search Catalog...");
                mainSearchTextField.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        mainSearchTextFieldActionPerformed(evt);
                    }
                });
                mainSearchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        mainSearchTextFieldFocusGained(evt);
                    }
                });
                mainSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        mainSearchTextFieldKeyPressed(evt);
                    }
                });

                javax.swing.GroupLayout mainSearchPanelLayout = new javax.swing.GroupLayout(mainSearchPanel);
                mainSearchPanel.setLayout(mainSearchPanelLayout);
                mainSearchPanelLayout.setHorizontalGroup(
                    mainSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainSearchPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(14, 14, 14)
                        .addComponent(mainSearchTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(mainSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                );
                mainSearchPanelLayout.setVerticalGroup(
                    mainSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, mainSearchPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(mainSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mainSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                );

                mainFunctionsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
                mainFunctionsPanel.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        mainFunctionsPanelMouseEntered(evt);
                    }
                    public void mouseExited(java.awt.event.MouseEvent evt) {
                        mainFunctionsPanelMouseExited(evt);
                    }
                });

                mainCatalogLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                mainCatalogLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/catalog48.png"))); // NOI18N
                mainCatalogLabel.setText("Catalog");
                mainCatalogLabel.setToolTipText("Browse, Edit, and Search the Catalog");
                mainCatalogLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                mainCatalogLabel.setFocusable(false);
                mainCatalogLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        mainCatalogLabelMouseClicked(evt);
                    }
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        mainCatalogLabelMouseEntered(evt);
                    }
                });

                mainPatronsLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                mainPatronsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/patrons48.png"))); // NOI18N
                mainPatronsLabel.setText("Patrons");
                mainPatronsLabel.setToolTipText("Browse, Edit, and Search all the patrons");
                mainPatronsLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                mainPatronsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        mainPatronsLabelMouseClicked(evt);
                    }
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        mainPatronsLabelMouseEntered(evt);
                    }
                });

                mainReportsLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                mainReportsLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/reports48.png"))); // NOI18N
                mainReportsLabel.setText("Reports");
                mainReportsLabel.setToolTipText("View the reports, Library and Items Out");
                mainReportsLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                mainReportsLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        mainReportsLabelMouseClicked(evt);
                    }
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        mainReportsLabelMouseEntered(evt);
                    }
                });

                mainTypesLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                mainTypesLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/types48.png"))); // NOI18N
                mainTypesLabel.setText("Types");
                mainTypesLabel.setToolTipText("View and Edit the types");
                mainTypesLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                mainTypesLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        mainTypesLabelMouseClicked(evt);
                    }
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        mainTypesLabelMouseEntered(evt);
                    }
                });

                javax.swing.GroupLayout mainFunctionsPanelLayout = new javax.swing.GroupLayout(mainFunctionsPanel);
                mainFunctionsPanel.setLayout(mainFunctionsPanelLayout);
                mainFunctionsPanelLayout.setHorizontalGroup(
                    mainFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainFunctionsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainCatalogLabel)
                            .addComponent(mainTypesLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addGroup(mainFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(mainPatronsLabel)
                            .addComponent(mainReportsLabel))
                        .addContainerGap())
                );
                mainFunctionsPanelLayout.setVerticalGroup(
                    mainFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainFunctionsPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(mainFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mainCatalogLabel)
                            .addComponent(mainPatronsLabel))
                        .addGap(28, 28, 28)
                        .addGroup(mainFunctionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mainReportsLabel)
                            .addComponent(mainTypesLabel))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));

                displayDate.setFont(new java.awt.Font("Tahoma", 1, 33)); // NOI18N
                displayDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
                displayDate.setText("Date");

                javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
                jPanel2.setLayout(jPanel2Layout);
                jPanel2Layout.setHorizontalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(displayDate, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                jPanel2Layout.setVerticalGroup(
                    jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(displayDate, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                        .addContainerGap())
                );

                checkoutReturnPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153), 3));
                checkoutReturnPanel.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        checkoutReturnPanelMouseEntered(evt);
                    }
                    public void mouseExited(java.awt.event.MouseEvent evt) {
                        checkoutReturnPanelMouseExited(evt);
                    }
                });

                mainCheckoutLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
                mainCheckoutLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/checkout64.png"))); // NOI18N
                mainCheckoutLabel.setText("Checkout / Return");
                mainCheckoutLabel.setToolTipText("Checkout to or recieve an item from a patron");
                mainCheckoutLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                mainCheckoutLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        mainCheckoutLabelMouseClicked(evt);
                    }
                    public void mouseEntered(java.awt.event.MouseEvent evt) {
                        mainCheckoutLabelMouseEntered(evt);
                    }
                });

                javax.swing.GroupLayout checkoutReturnPanelLayout = new javax.swing.GroupLayout(checkoutReturnPanel);
                checkoutReturnPanel.setLayout(checkoutReturnPanelLayout);
                checkoutReturnPanelLayout.setHorizontalGroup(
                    checkoutReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkoutReturnPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainCheckoutLabel)
                        .addContainerGap())
                );
                checkoutReturnPanelLayout.setVerticalGroup(
                    checkoutReturnPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(checkoutReturnPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(mainCheckoutLabel)
                        .addContainerGap())
                );

                javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
                jPanel3.setLayout(jPanel3Layout);
                jPanel3Layout.setHorizontalGroup(
                    jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(checkoutReturnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                );
                jPanel3Layout.setVerticalGroup(
                    jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(checkoutReturnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
                mainPanel.setLayout(mainPanelLayout);
                mainPanelLayout.setHorizontalGroup(
                    mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(mainSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(mainPanelLayout.createSequentialGroup()
                                .addComponent(mainFunctionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addContainerGap())
                );
                mainPanelLayout.setVerticalGroup(
                    mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(mainPanelLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(mainSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(15, 15, 15)
                        .addGroup(mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(mainFunctionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );

                typesMainPanel.setPreferredSize(new java.awt.Dimension(758, 500));

                typesTable.setModel(new javax.swing.table.DefaultTableModel(
                    DAPMain.typesData, DAPMain.typesHeader
                ));
                typesTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                typesTable.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        typesTableMouseClicked(evt);
                    }
                });
                typesTable.addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        typesTableKeyPressed(evt);
                    }
                });
                jScrollPane5.setViewportView(typesTable);

                jLabel25.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/types32.png"))); // NOI18N
                jLabel25.setText("Types");

                typesEditButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                typesEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/editType16.png"))); // NOI18N
                typesEditButton.setText("Edit");
                typesEditButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        typesEditButtonActionPerformed(evt);
                    }
                });

                typesSaveButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                typesSaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/save16.png"))); // NOI18N
                typesSaveButton.setText("Save");
                typesSaveButton.setEnabled(false);
                typesSaveButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        typesSaveButtonActionPerformed(evt);
                    }
                });

                typesRemoveButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                typesRemoveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/typeRemove16.png"))); // NOI18N
                typesRemoveButton.setText("Remove");
                typesRemoveButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        typesRemoveButtonActionPerformed(evt);
                    }
                });

                typesNewButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                typesNewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/newTypes16.png"))); // NOI18N
                typesNewButton.setText("New");
                typesNewButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        typesNewButtonActionPerformed(evt);
                    }
                });

                typesDescriptionTextField.setColumns(20);
                typesDescriptionTextField.setEditable(false);
                typesDescriptionTextField.setRows(5);
                typesDescriptionTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        typesDescriptionTextFieldFocusGained(evt);
                    }
                });
                jScrollPane7.setViewportView(typesDescriptionTextField);

                jLabel26.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                jLabel26.setText("Description:");

                typesTypeTextField.setEditable(false);
                typesTypeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        typesTypeTextFieldFocusGained(evt);
                    }
                });

                jLabel27.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
                jLabel27.setText("Type:");

                typesHomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/home22.png"))); // NOI18N
                typesHomeButton.setText("Home");
                typesHomeButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        typesHomeButtonActionPerformed(evt);
                    }
                });

                typesCancelButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                typesCancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/cancel16.png"))); // NOI18N
                typesCancelButton.setText("Cancel");
                typesCancelButton.setEnabled(false);
                typesCancelButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        typesCancelButtonActionPerformed(evt);
                    }
                });

                javax.swing.GroupLayout typesMainPanelLayout = new javax.swing.GroupLayout(typesMainPanel);
                typesMainPanel.setLayout(typesMainPanelLayout);
                typesMainPanelLayout.setHorizontalGroup(
                    typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(typesMainPanelLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(typesMainPanelLayout.createSequentialGroup()
                                .addComponent(jLabel25)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(typesHomeButton))
                            .addGroup(typesMainPanelLayout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addGroup(typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 576, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(typesMainPanelLayout.createSequentialGroup()
                                        .addGroup(typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(typesMainPanelLayout.createSequentialGroup()
                                                .addGap(50, 50, 50)
                                                .addComponent(jLabel27)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(typesTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(typesMainPanelLayout.createSequentialGroup()
                                                .addComponent(jLabel26)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                            .addComponent(typesRemoveButton)
                                            .addComponent(typesSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(typesNewButton)
                                            .addComponent(typesEditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(typesCancelButton))
                                        .addGap(24, 24, 24)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(92, 92, 92))
                );

                typesMainPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {typesCancelButton, typesEditButton, typesNewButton, typesRemoveButton, typesSaveButton});

                typesMainPanelLayout.setVerticalGroup(
                    typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(typesMainPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel25)
                            .addComponent(typesHomeButton))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(typesMainPanelLayout.createSequentialGroup()
                                .addGap(7, 7, 7)
                                .addGroup(typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel27)
                                    .addComponent(typesTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(typesMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel26)
                                    .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(typesMainPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typesNewButton, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typesEditButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typesRemoveButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typesSaveButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(typesCancelButton)))
                        .addContainerGap(31, Short.MAX_VALUE))
                );

                typesMainPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {typesCancelButton, typesEditButton, typesNewButton, typesRemoveButton, typesSaveButton});

                catalogMainPanel.setPreferredSize(new java.awt.Dimension(820, 550));

                catalogMainLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                catalogMainLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/catalog32.png"))); // NOI18N
                catalogMainLabel2.setText("Catalog");

                catalogTable.setModel(new javax.swing.table.DefaultTableModel(
                    DAPMain.itemsData,DAPMain.itemsHeader
                ));
                catalogTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                catalogTable.addMouseListener(new java.awt.event.MouseAdapter() {
                    public void mouseClicked(java.awt.event.MouseEvent evt) {
                        catalogTableMouseClicked(evt);
                    }
                });
                catalogTable.addKeyListener(new java.awt.event.KeyAdapter() {
                    public void keyPressed(java.awt.event.KeyEvent evt) {
                        catalogTableKeyPressed(evt);
                    }
                });
                catalogMainScrollPane2.setViewportView(catalogTable);

                catalogNewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/catalogNew16.png"))); // NOI18N
                catalogNewButton.setText("New");
                catalogNewButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        catalogNewButtonActionPerformed(evt);
                    }
                });

                catalogRemoveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/catalogRemove16.png"))); // NOI18N
                catalogRemoveButton.setText("Remove");
                catalogRemoveButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        catalogRemoveButtonActionPerformed(evt);
                    }
                });

                catalogSaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/save16.png"))); // NOI18N
                catalogSaveButton.setText("Save");
                catalogSaveButton.setEnabled(false);
                catalogSaveButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        catalogSaveButtonActionPerformed(evt);
                    }
                });

                catalogEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/editType16.png"))); // NOI18N
                catalogEditButton.setText("Edit");
                catalogEditButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        catalogEditButtonActionPerformed(evt);
                    }
                });

                catalogHomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/home22.png"))); // NOI18N
                catalogHomeButton.setText("Home");
                catalogHomeButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        catalogHomeButtonActionPerformed(evt);
                    }
                });

                catalogCancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/cancel16.png"))); // NOI18N
                catalogCancelButton.setText("Cancel");
                catalogCancelButton.setEnabled(false);
                catalogCancelButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        catalogCancelButtonActionPerformed(evt);
                    }
                });

                jLabel42.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel42.setText("Published Date:");

                jLabel41.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel41.setText("Item Number:");

                catalogAuthorTextField.setEditable(false);
                catalogAuthorTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        catalogAuthorTextFieldFocusGained(evt);
                    }
                });

                catalogPublishedDateTextField.setEditable(false);
                catalogPublishedDateTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        catalogPublishedDateTextFieldFocusGained(evt);
                    }
                });

                catalogItemTextField.setEditable(false);
                catalogItemTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        catalogItemTextFieldFocusGained(evt);
                    }
                });

                catalogItemNumberTextField.setEditable(false);
                catalogItemNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        catalogItemNumberTextFieldFocusGained(evt);
                    }
                });

                jLabel40.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel40.setText("Item Name:");

                jLabel44.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel44.setText("Author:");

                jLabel39.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                jLabel39.setText("Type:");

                catalogTypeTextField.setEditable(false);
                catalogTypeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                    public void focusGained(java.awt.event.FocusEvent evt) {
                        catalogTypeTextFieldFocusGained(evt);
                    }
                });

                javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
                jPanel6.setLayout(jPanel6Layout);
                jPanel6Layout.setHorizontalGroup(
                    jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel41)
                                    .addComponent(jLabel40)))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(54, 54, 54)
                                .addComponent(jLabel44)))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(catalogAuthorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(26, 26, 26)
                                .addComponent(jLabel42)
                                .addGap(18, 18, 18)
                                .addComponent(catalogPublishedDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(catalogItemNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(86, 86, 86)
                                .addComponent(jLabel39)
                                .addGap(18, 18, 18)
                                .addComponent(catalogTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(catalogItemTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 431, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                );
                jPanel6Layout.setVerticalGroup(
                    jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel39)
                                .addComponent(catalogTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel41)
                                .addComponent(catalogItemNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(28, 28, 28)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(catalogItemTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel42)
                            .addComponent(catalogPublishedDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel44)
                            .addComponent(catalogAuthorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(36, Short.MAX_VALUE))
                );

                jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {catalogAuthorTextField, catalogTypeTextField});

                catalogSearchPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 0), 2, true));

                catalogSearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/searchButtonIcon.png"))); // NOI18N
                catalogSearchButton.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        catalogSearchButtonActionPerformed(evt);
                    }
                });

                catalogSearchComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                catalogSearchComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Title", "Author", "Item Number" }));
                catalogSearchComboBox.addActionListener(new java.awt.event.ActionListener() {
                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                        catalogSearchComboBoxActionPerformed(evt);
                    }
                });

                catalogSearchTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                catalogSearchTextField.setText("Search Catalog...");
                catalogSearchTextField.getDocument().addDocumentListener(new DocumentListener() {
                    public void changedUpdate(DocumentEvent e) {
                        String searchType = catalogSearchComboBox.getSelectedItem().toString();
                        String searchText = catalogSearchTextField.getText().toLowerCase();

                        if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Catalog...") && !searchText.equals(" ") && !searchType.equals("Item Number"))
                        DAPUtil.search("catalogMainPanel",searchType,searchText);
                        if(searchText.equals(""))
                        {
                            DataInit.hashmapToArrayLibrary();
                            DAP.catalogTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.itemsData, DAPMain.itemsHeader));
                            DAP.catalogFullCatalogButton.setVisible(false);
                        }
                    }
                    public void removeUpdate(DocumentEvent e) {
                        String searchType = catalogSearchComboBox.getSelectedItem().toString();
                        String searchText = catalogSearchTextField.getText().toLowerCase();

                        if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Catalog...") && !searchText.equals(" ")&& !searchType.equals("Item Number"))
                        DAPUtil.search("catalogMainPanel",searchType,searchText);
                        if(searchText.equals(""))
                        {
                            DataInit.hashmapToArrayLibrary();
                            DAP.catalogTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.itemsData, DAPMain.itemsHeader));
                            DAP.catalogFullCatalogButton.setVisible(false);
                        }
                    }
                    public void insertUpdate(DocumentEvent e) {
                        String searchType = catalogSearchComboBox.getSelectedItem().toString();
                        String searchText = catalogSearchTextField.getText().toLowerCase();

                        if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Catalog...") && !searchText.equals(" ") && !searchType.equals("Item Number"))
                        DAPUtil.search("catalogMainPanel",searchType,searchText);
                    }});
                    catalogSearchTextField.addCaretListener(new javax.swing.event.CaretListener() {
                        public void caretUpdate(javax.swing.event.CaretEvent evt) {
                            catalogSearchTextFieldCaretUpdate(evt);
                        }
                    });
                    catalogSearchTextField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            catalogSearchTextFieldActionPerformed(evt);
                        }
                    });
                    catalogSearchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            catalogSearchTextFieldFocusGained(evt);
                        }
                    });
                    catalogSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                            catalogSearchTextFieldKeyPressed(evt);
                        }
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                            catalogSearchTextFieldKeyTyped(evt);
                        }
                    });

                    javax.swing.GroupLayout catalogSearchPanelLayout = new javax.swing.GroupLayout(catalogSearchPanel);
                    catalogSearchPanel.setLayout(catalogSearchPanelLayout);
                    catalogSearchPanelLayout.setHorizontalGroup(
                        catalogSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogSearchPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(catalogSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(catalogSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addComponent(catalogSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    );
                    catalogSearchPanelLayout.setVerticalGroup(
                        catalogSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, catalogSearchPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(catalogSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(catalogSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(catalogSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(catalogSearchButton))
                            .addContainerGap())
                    );

                    catalogFullCatalogButton.setText("Full Catalog");
                    catalogFullCatalogButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            catalogFullCatalogButtonActionPerformed(evt);
                        }
                    });

                    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
                    jPanel1.setLayout(jPanel1Layout);
                    jPanel1Layout.setHorizontalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(catalogFullCatalogButton)
                            .addContainerGap())
                    );
                    jPanel1Layout.setVerticalGroup(
                        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGap(0, 0, Short.MAX_VALUE)
                            .addComponent(catalogFullCatalogButton))
                    );

                    javax.swing.GroupLayout catalogMainPanelLayout = new javax.swing.GroupLayout(catalogMainPanel);
                    catalogMainPanel.setLayout(catalogMainPanelLayout);
                    catalogMainPanelLayout.setHorizontalGroup(
                        catalogMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(catalogMainPanelLayout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addGroup(catalogMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(catalogMainPanelLayout.createSequentialGroup()
                                    .addGroup(catalogMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(catalogMainPanelLayout.createSequentialGroup()
                                            .addGap(9, 9, 9)
                                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(39, 39, 39)
                                            .addGroup(catalogMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(catalogEditButton)
                                                .addComponent(catalogNewButton)
                                                .addComponent(catalogCancelButton)
                                                .addComponent(catalogRemoveButton)
                                                .addComponent(catalogSaveButton)))
                                        .addComponent(catalogMainScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(0, 0, Short.MAX_VALUE))
                                .addGroup(catalogMainPanelLayout.createSequentialGroup()
                                    .addComponent(catalogMainLabel2)
                                    .addGap(32, 32, 32)
                                    .addComponent(catalogSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                                    .addComponent(catalogHomeButton)
                                    .addContainerGap())))
                    );

                    catalogMainPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {catalogCancelButton, catalogEditButton, catalogNewButton, catalogRemoveButton, catalogSaveButton});

                    catalogMainPanelLayout.setVerticalGroup(
                        catalogMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(catalogMainPanelLayout.createSequentialGroup()
                            .addGap(11, 11, 11)
                            .addGroup(catalogMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(catalogHomeButton)
                                .addComponent(catalogMainLabel2)
                                .addComponent(catalogSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(10, 10, 10)
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(catalogMainScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(catalogMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(catalogMainPanelLayout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(catalogMainPanelLayout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(catalogNewButton)
                                    .addGap(10, 10, 10)
                                    .addComponent(catalogEditButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(catalogRemoveButton)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(catalogSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(catalogCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addContainerGap(33, Short.MAX_VALUE))
                    );

                    catalogMainPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {catalogCancelButton, catalogEditButton, catalogNewButton, catalogRemoveButton, catalogSaveButton});

                    jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                    jLabel5.setText("Search Results");

                    searchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {
                            {null, null, null, null},
                            {null, null, null, null},
                            {null, null, null, null},
                            {null, null, null, null}
                        },
                        new String [] {
                            "Title 1", "Title 2", "Title 3", "Title 4"
                        }
                    ));
                    searchResultsTable.setEnabled(false);
                    jScrollPane2.setViewportView(searchResultsTable);

                    jButton6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/home22.png"))); // NOI18N
                    jButton6.setText("Home");
                    jButton6.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            jButton6ActionPerformed(evt);
                        }
                    });

                    javax.swing.GroupLayout searchResultsPanelLayout = new javax.swing.GroupLayout(searchResultsPanel);
                    searchResultsPanel.setLayout(searchResultsPanelLayout);
                    searchResultsPanelLayout.setHorizontalGroup(
                        searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(searchResultsPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchResultsPanelLayout.createSequentialGroup()
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 761, Short.MAX_VALUE)
                                    .addContainerGap())
                                .addGroup(searchResultsPanelLayout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton6)
                                    .addGap(18, 18, 18))))
                    );
                    searchResultsPanelLayout.setVerticalGroup(
                        searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(searchResultsPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(searchResultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(jButton6))
                            .addGap(18, 18, 18)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addContainerGap(62, Short.MAX_VALUE))
                    );

                    jLabel2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                    jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/checkout32.png"))); // NOI18N
                    jLabel2.setText("Checkouts and Returns");

                    checkoutPatronNameTextField.setBackground(new java.awt.Color(228, 228, 228));
                    checkoutPatronNameTextField.setEditable(false);
                    checkoutPatronNameTextField.setText("Patron Name...");
                    checkoutPatronNameTextField.setFocusable(false);

                    checkoutTitleTextField.setBackground(new java.awt.Color(228, 228, 228));
                    checkoutTitleTextField.setEditable(false);
                    checkoutTitleTextField.setText("Title...");
                    checkoutTitleTextField.setDisabledTextColor(new java.awt.Color(0, 0, 0));
                    checkoutTitleTextField.setFocusable(false);
                    checkoutTitleTextField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            checkoutTitleTextFieldActionPerformed(evt);
                        }
                    });

                    checkoutAuthorTextField.setBackground(new java.awt.Color(228, 228, 228));
                    checkoutAuthorTextField.setEditable(false);
                    checkoutAuthorTextField.setText("Author...");
                    checkoutAuthorTextField.setFocusable(false);
                    checkoutAuthorTextField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            checkoutAuthorTextFieldActionPerformed(evt);
                        }
                    });

                    checkoutTypeTextField.setBackground(new java.awt.Color(228, 228, 228));
                    checkoutTypeTextField.setEditable(false);
                    checkoutTypeTextField.setText("Type...");
                    checkoutTypeTextField.setFocusable(false);

                    checkoutTable.setModel(new javax.swing.table.DefaultTableModel(
                        new Object [][] {

                        },
                        new String [] {
                            "Item#", "Title", "Author", "Type", "Date Out", "Date Due"
                        }
                    ));
                    checkoutTable.setRowSorter(null);
                    jScrollPane1.setViewportView(checkoutTable);

                    checkoutCheckoutButton.setText("Checkout Item");
                    checkoutCheckoutButton.setEnabled(false);
                    checkoutCheckoutButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            checkoutCheckoutButtonActionPerformed(evt);
                        }
                    });

                    checkoutReturnButton.setText("Return Item");
                    checkoutReturnButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            checkoutReturnButtonActionPerformed(evt);
                        }
                    });

                    checkoutReturnAllButton.setText("Return All");
                    checkoutReturnAllButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            checkoutReturnAllButtonActionPerformed(evt);
                        }
                    });

                    jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/home22.png"))); // NOI18N
                    jButton4.setText("Home");
                    jButton4.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            jButton4ActionPerformed(evt);
                        }
                    });

                    jLabel4.setText("Item#:");

                    checkoutItemNumberTextField.setText("Click on Search or Enter Item #");
                    checkoutItemNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            checkoutItemNumberTextFieldFocusGained(evt);
                        }
                        public void focusLost(java.awt.event.FocusEvent evt) {
                            checkoutItemNumberTextFieldFocusLost(evt);
                        }
                    });
                    checkoutItemNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                            checkoutItemNumberTextFieldKeyPressed(evt);
                        }
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                            checkoutItemNumberTextFieldKeyTyped(evt);
                        }
                    });

                    jLabel3.setText("Patron ID:");

                    checkoutPatronNumberTextField.setText("Click on Search or Enter Patron ID");
                    checkoutPatronNumberTextField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            checkoutPatronNumberTextFieldActionPerformed(evt);
                        }
                    });
                    checkoutPatronNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            checkoutPatronNumberTextFieldFocusGained(evt);
                        }
                        public void focusLost(java.awt.event.FocusEvent evt) {
                            checkoutPatronNumberTextFieldFocusLost(evt);
                        }
                    });
                    checkoutPatronNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                            checkoutPatronNumberTextFieldKeyPressed(evt);
                        }
                        public void keyTyped(java.awt.event.KeyEvent evt) {
                            checkoutPatronNumberTextFieldKeyTyped(evt);
                        }
                    });

                    jSeparator1.setForeground(new java.awt.Color(204, 204, 204));
                    jSeparator1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.LOWERED));
                    jSeparator1.setRequestFocusEnabled(false);

                    checkoutPatronSearchLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/searchButtonIcon.png"))); // NOI18N
                    checkoutPatronSearchLabel.setToolTipText("Search for a patron's ID");
                    checkoutPatronSearchLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    checkoutPatronSearchLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            checkoutPatronSearchLabelMouseClicked(evt);
                        }
                    });

                    checkoutCatalogSearchLabel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/searchButtonIcon.png"))); // NOI18N
                    checkoutCatalogSearchLabel.setToolTipText("Search for an item's number");
                    checkoutCatalogSearchLabel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
                    checkoutCatalogSearchLabel.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            checkoutCatalogSearchLabelMouseClicked(evt);
                        }
                    });

                    jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
                    jLabel8.setText("Items Currently Checked Out:");

                    checkoutItemsCurrentlyCheckedOutLabel.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
                    checkoutItemsCurrentlyCheckedOutLabel.setText("No Items Checked Out");
                    checkoutItemsCurrentlyCheckedOutLabel.setFocusable(false);

                    javax.swing.GroupLayout checkoutMainPanelLayout = new javax.swing.GroupLayout(checkoutMainPanel);
                    checkoutMainPanel.setLayout(checkoutMainPanelLayout);
                    checkoutMainPanelLayout.setHorizontalGroup(
                        checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(checkoutMainPanelLayout.createSequentialGroup()
                            .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(checkoutMainPanelLayout.createSequentialGroup()
                                    .addContainerGap()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton4))
                                .addGroup(checkoutMainPanelLayout.createSequentialGroup()
                                    .addGap(273, 273, 273)
                                    .addComponent(checkoutReturnButton)
                                    .addGap(58, 58, 58)
                                    .addComponent(checkoutReturnAllButton))
                                .addGroup(checkoutMainPanelLayout.createSequentialGroup()
                                    .addGap(43, 43, 43)
                                    .addComponent(jSeparator1))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, checkoutMainPanelLayout.createSequentialGroup()
                                    .addGap(33, 33, 33)
                                    .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(checkoutMainPanelLayout.createSequentialGroup()
                                            .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(checkoutMainPanelLayout.createSequentialGroup()
                                                    .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(jLabel3)
                                                        .addComponent(jLabel4))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                    .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(checkoutPatronNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(checkoutItemNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(checkoutPatronSearchLabel)
                                                        .addComponent(checkoutCatalogSearchLabel)))
                                                .addGroup(checkoutMainPanelLayout.createSequentialGroup()
                                                    .addComponent(jLabel8)
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addComponent(checkoutItemsCurrentlyCheckedOutLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGap(2, 2, 2)
                                            .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                .addComponent(checkoutCheckoutButton)
                                                .addComponent(checkoutTypeTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(checkoutAuthorTextField, javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(checkoutTitleTextField)
                                                .addComponent(checkoutPatronNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)))
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 715, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addContainerGap())
                    );

                    checkoutMainPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {checkoutReturnAllButton, checkoutReturnButton});

                    checkoutMainPanelLayout.setVerticalGroup(
                        checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(checkoutMainPanelLayout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jButton4))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(checkoutPatronNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel3)
                                .addComponent(checkoutPatronNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(checkoutPatronSearchLabel))
                            .addGap(13, 13, 13)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                .addComponent(checkoutTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel4)
                                .addComponent(checkoutItemNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(checkoutCatalogSearchLabel))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(checkoutMainPanelLayout.createSequentialGroup()
                                    .addComponent(checkoutAuthorTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(checkoutTypeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(checkoutCheckoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, checkoutMainPanelLayout.createSequentialGroup()
                                    .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(checkoutItemsCurrentlyCheckedOutLabel)
                                        .addComponent(jLabel8))
                                    .addGap(9, 9, 9)))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(18, 18, 18)
                            .addGroup(checkoutMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(checkoutReturnButton)
                                .addComponent(checkoutReturnAllButton))
                            .addContainerGap(16, Short.MAX_VALUE))
                    );

                    checkoutMainPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {checkoutCheckoutButton, checkoutReturnAllButton, checkoutReturnButton});

                    patronsMainPanel.setEnabled(false);
                    patronsMainPanel.setPreferredSize(new java.awt.Dimension(840, 620));
                    patronsMainPanel.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            patronsMainPanelFocusGained(evt);
                        }
                    });

                    patronsEditButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/editType16.png"))); // NOI18N
                    patronsEditButton.setText("Edit");
                    patronsEditButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            patronsEditButtonActionPerformed(evt);
                        }
                    });

                    patronsRemoveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/patronsRemove16.png"))); // NOI18N
                    patronsRemoveButton.setText("Remove");
                    patronsRemoveButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            patronsRemoveButtonActionPerformed(evt);
                        }
                    });

                    patronsNewButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/patronsNew16.png"))); // NOI18N
                    patronsNewButton.setText("New");
                    patronsNewButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            patronsNewButtonActionPerformed(evt);
                        }
                    });

                    patronsSaveButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/save16.png"))); // NOI18N
                    patronsSaveButton.setText("Save");
                    patronsSaveButton.setEnabled(false);
                    patronsSaveButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            patronsSaveButtonActionPerformed(evt);
                        }
                    });

                    jLabel58.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                    jLabel58.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/patrons32.png"))); // NOI18N
                    jLabel58.setText("Patrons");

                    patronsTable.setModel(new javax.swing.table.DefaultTableModel(
                        DAPMain.patronsData, DAPMain.patronsHeader
                    ));
                    patronsTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                    patronsTable.addMouseListener(new java.awt.event.MouseAdapter() {
                        public void mouseClicked(java.awt.event.MouseEvent evt) {
                            patronsTableMouseClicked(evt);
                        }
                    });
                    patronsTable.addKeyListener(new java.awt.event.KeyAdapter() {
                        public void keyPressed(java.awt.event.KeyEvent evt) {
                            patronsTableKeyPressed(evt);
                        }
                    });
                    jScrollPane9.setViewportView(patronsTable);

                    patronsHomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/home22.png"))); // NOI18N
                    patronsHomeButton.setText("Home");
                    patronsHomeButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            patronsHomeButtonActionPerformed(evt);
                        }
                    });

                    patronsCancelButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/cancel16.png"))); // NOI18N
                    patronsCancelButton.setText("Cancel");
                    patronsCancelButton.setEnabled(false);
                    patronsCancelButton.setEnabled(false);
                    patronsCancelButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            patronsCancelButtonActionPerformed(evt);
                        }
                    });

                    jLabel56.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel56.setText("Last Name:");

                    jLabel54.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel54.setText("Email:");

                    jLabel55.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel55.setText("First Name:");

                    patronNumberTextField.setEditable(false);
                    patronNumberTextField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            patronNumberTextFieldActionPerformed(evt);
                        }
                    });
                    patronNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            patronNumberTextFieldFocusGained(evt);
                        }
                    });

                    firstNameTextField.setEditable(false);
                    firstNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            firstNameTextFieldFocusGained(evt);
                        }
                    });

                    jLabel57.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel57.setText("Patron Number:");

                    emailTextField.setEditable(false);
                    emailTextField.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            emailTextFieldActionPerformed(evt);
                        }
                    });
                    emailTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            emailTextFieldFocusGained(evt);
                        }
                    });

                    lastNameTextField.setEditable(false);
                    lastNameTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            lastNameTextFieldFocusGained(evt);
                        }
                    });

                    phoneTextField.setEditable(false);
                    phoneTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            phoneTextFieldFocusGained(evt);
                        }
                    });

                    jLabel53.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel53.setText("Phone:");

                    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
                    jPanel4.setLayout(jPanel4Layout);
                    jPanel4Layout.setHorizontalGroup(
                        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel57)
                                .addComponent(jLabel55)
                                .addComponent(jLabel56)
                                .addComponent(jLabel54)
                                .addComponent(jLabel53))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(phoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 195, Short.MAX_VALUE)
                                .addComponent(emailTextField)
                                .addComponent(firstNameTextField)
                                .addComponent(lastNameTextField)
                                .addComponent(patronNumberTextField))
                            .addContainerGap())
                    );
                    jPanel4Layout.setVerticalGroup(
                        jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel4Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel57)
                                .addComponent(patronNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel55)
                                .addComponent(firstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel56)
                                .addComponent(lastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel54)
                                .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel53)
                                .addComponent(phoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    );

                    jLabel62.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel62.setText("City:");

                    addressTextField.setEditable(false);
                    addressTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            addressTextFieldFocusGained(evt);
                        }
                    });

                    jLabel63.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel63.setText("Address:");

                    stateTextField.setEditable(false);
                    stateTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            stateTextFieldFocusGained(evt);
                        }
                    });

                    cityTextField.setEditable(false);
                    cityTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            cityTextFieldFocusGained(evt);
                        }
                    });

                    jLabel59.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel59.setText("State:");

                    jLabel60.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                    jLabel60.setText("ZipCode:");

                    zipCodeTextField.setEditable(false);
                    zipCodeTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                        public void focusGained(java.awt.event.FocusEvent evt) {
                            zipCodeTextFieldFocusGained(evt);
                        }
                    });

                    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
                    jPanel5.setLayout(jPanel5Layout);
                    jPanel5Layout.setHorizontalGroup(
                        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addComponent(jLabel60)
                                    .addGap(18, 18, 18)
                                    .addComponent(zipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel5Layout.createSequentialGroup()
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel63)
                                        .addComponent(jLabel62)
                                        .addComponent(jLabel59))
                                    .addGap(18, 18, 18)
                                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addContainerGap())
                    );
                    jPanel5Layout.setVerticalGroup(
                        jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel5Layout.createSequentialGroup()
                            .addContainerGap()
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel63)
                                .addComponent(addressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel62)
                                .addComponent(cityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel59)
                                .addComponent(stateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(18, 18, 18)
                            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel60)
                                .addComponent(zipCodeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap())
                    );

                    patronSearchPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 204, 0), 2, true));

                    patronSearchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/searchButtonIcon.png"))); // NOI18N
                    patronSearchButton.addActionListener(new java.awt.event.ActionListener() {
                        public void actionPerformed(java.awt.event.ActionEvent evt) {
                            patronSearchButtonActionPerformed(evt);
                        }
                    });

                    patronSearchComboBox.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                    patronSearchComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "First Name", "Last Name", "Patron Number" }));

                    patronSearchTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
                    patronSearchTextField.setText("Search Patrons...");
                    patronSearchTextField.getDocument().addDocumentListener(new DocumentListener() {
                        public void changedUpdate(DocumentEvent e) {
                            String searchType = patronSearchComboBox.getSelectedItem().toString();
                            String searchText = patronSearchTextField.getText().toLowerCase();

                            if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Patrons...")&& !searchText.equals(" ") && !searchType.equals("Patron Number"))
                            DAPUtil.search("patronsMainPanel",searchType,searchText);
                            if(searchText.equals(""))
                            {
                                DataInit.hashmapToArrayPatrons();
                                patronsTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.patronsData, DAPMain.patronsHeader));
                                DAP.patronsAllPatronsButton.setVisible(false);
                            }
                        }
                        public void removeUpdate(DocumentEvent e) {
                            String searchType = patronSearchComboBox.getSelectedItem().toString();
                            String searchText = patronSearchTextField.getText().toLowerCase();

                            if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Patrons...") && !searchText.equals(" ") && !searchType.equals("Patron Number"))
                            DAPUtil.search("patronsMainPanel",searchType,searchText);
                            if(searchText.equals(""))
                            {
                                DataInit.hashmapToArrayPatrons();
                                patronsTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.patronsData, DAPMain.patronsHeader));
                                DAP.patronsAllPatronsButton.setVisible(false);
                            }
                        }
                        public void insertUpdate(DocumentEvent e) {
                            String searchType = patronSearchComboBox.getSelectedItem().toString();
                            String searchText = patronSearchTextField.getText().toLowerCase();

                            if(instaSearchOnMenuItem.isSelected() && !searchText.equals("") && !searchText.equals("Search Patrons...") && !searchText.equals(" ") && !searchType.equals("Patron Number"))
                            DAPUtil.search("patronsMainPanel",searchType,searchText);
                        }});
                        patronSearchTextField.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                patronSearchTextFieldActionPerformed(evt);
                            }
                        });
                        patronSearchTextField.addFocusListener(new java.awt.event.FocusAdapter() {
                            public void focusGained(java.awt.event.FocusEvent evt) {
                                patronSearchTextFieldFocusGained(evt);
                            }
                        });
                        patronSearchTextField.addKeyListener(new java.awt.event.KeyAdapter() {
                            public void keyPressed(java.awt.event.KeyEvent evt) {
                                patronSearchTextFieldKeyPressed(evt);
                            }
                        });

                        javax.swing.GroupLayout patronSearchPanelLayout = new javax.swing.GroupLayout(patronSearchPanel);
                        patronSearchPanel.setLayout(patronSearchPanelLayout);
                        patronSearchPanelLayout.setHorizontalGroup(
                            patronSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patronSearchPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(patronSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(patronSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(patronSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        );
                        patronSearchPanelLayout.setVerticalGroup(
                            patronSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patronSearchPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(patronSearchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                    .addComponent(patronSearchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(patronSearchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(patronSearchButton))
                                .addContainerGap())
                        );

                        patronsAllPatronsButton.setText("All Patrons");
                        patronsAllPatronsButton.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                patronsAllPatronsButtonActionPerformed(evt);
                            }
                        });

                        javax.swing.GroupLayout patronsMainPanelLayout = new javax.swing.GroupLayout(patronsMainPanel);
                        patronsMainPanel.setLayout(patronsMainPanelLayout);
                        patronsMainPanelLayout.setHorizontalGroup(
                            patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patronsMainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(patronsMainPanelLayout.createSequentialGroup()
                                        .addGroup(patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(patronsMainPanelLayout.createSequentialGroup()
                                                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(patronsMainPanelLayout.createSequentialGroup()
                                                .addGroup(patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(patronsAllPatronsButton)
                                                    .addComponent(jLabel58))
                                                .addGap(57, 57, 57)
                                                .addComponent(patronSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGroup(patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(patronsMainPanelLayout.createSequentialGroup()
                                                .addGap(68, 68, 68)
                                                .addComponent(patronsHomeButton))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patronsMainPanelLayout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGroup(patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(patronsEditButton)
                                                    .addComponent(patronsNewButton)
                                                    .addComponent(patronsSaveButton)
                                                    .addComponent(patronsRemoveButton)
                                                    .addComponent(patronsCancelButton))
                                                .addGap(36, 36, 36))))
                                    .addGroup(patronsMainPanelLayout.createSequentialGroup()
                                        .addComponent(jScrollPane9)
                                        .addGap(62, 62, 62))))
                        );

                        patronsMainPanelLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {patronsCancelButton, patronsEditButton, patronsNewButton, patronsRemoveButton, patronsSaveButton});

                        patronsMainPanelLayout.setVerticalGroup(
                            patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(patronsMainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel58)
                                    .addComponent(patronsHomeButton)
                                    .addComponent(patronSearchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(patronsAllPatronsButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patronsMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, patronsMainPanelLayout.createSequentialGroup()
                                        .addComponent(patronsNewButton)
                                        .addGap(10, 10, 10)
                                        .addComponent(patronsEditButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(patronsRemoveButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(patronsSaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(patronsCancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addContainerGap(95, Short.MAX_VALUE))
                        );

                        patronsMainPanelLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {patronsCancelButton, patronsEditButton, patronsNewButton, patronsRemoveButton, patronsSaveButton});

                        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
                        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/reports32.png"))); // NOI18N
                        jLabel13.setText("Reports");

                        reportsScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
                        reportsScrollPane.setPreferredSize(new java.awt.Dimension(175, 81));

                        reportTextArea.setColumns(20);
                        reportTextArea.setEditable(false);
                        reportTextArea.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
                        reportTextArea.setRows(5);
                        reportTextArea.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
                        reportsScrollPane.setViewportView(reportTextArea);

                        reportPrintButton.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                        reportPrintButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/printer32.png"))); // NOI18N
                        reportPrintButton.setText("Print");
                        reportPrintButton.setToolTipText("Print the Current Report");
                        reportPrintButton.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                reportPrintButtonActionPerformed(evt);
                            }
                        });

                        reportsHomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/home22.png"))); // NOI18N
                        reportsHomeButton.setText("Home");
                        reportsHomeButton.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                reportsHomeButtonActionPerformed(evt);
                            }
                        });

                        reportsButtonGroup.add(reportsAllItemsRadioButton);
                        reportsAllItemsRadioButton.setSelected(true);
                        reportsAllItemsRadioButton.setText("Catalog Items");
                        reportsAllItemsRadioButton.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                reportsAllItemsRadioButtonActionPerformed(evt);
                            }
                        });

                        reportsButtonGroup.add(reportsCheckedOutItemsRadioButton);
                        reportsCheckedOutItemsRadioButton.setText("Checked Out Items");
                        reportsCheckedOutItemsRadioButton.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                reportsCheckedOutItemsRadioButtonActionPerformed(evt);
                            }
                        });

                        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
                        jLabel7.setText("View");

                        sortButtonGroup.add(reportsSortDateRadioButton);
                        reportsSortDateRadioButton.setSelected(true);
                        reportsSortDateRadioButton.setText("Sort by Date Due");
                        reportsSortDateRadioButton.setEnabled(false);
                        reportsSortDateRadioButton.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                reportsSortDateRadioButtonActionPerformed(evt);
                            }
                        });

                        sortButtonGroup.add(reportsSortPatronRadioButton);
                        reportsSortPatronRadioButton.setText("Sort by Patron");
                        reportsSortPatronRadioButton.setEnabled(false);
                        reportsSortPatronRadioButton.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                reportsSortPatronRadioButtonActionPerformed(evt);
                            }
                        });

                        reportsTypesComboBox.setMaximumRowCount(13);
                        reportsTypesComboBox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
                        reportsTypesComboBox.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                reportsTypesComboBoxActionPerformed(evt);
                            }
                        });

                        javax.swing.GroupLayout reportMainPanelLayout = new javax.swing.GroupLayout(reportMainPanel);
                        reportMainPanel.setLayout(reportMainPanelLayout);
                        reportMainPanelLayout.setHorizontalGroup(
                            reportMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reportMainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(reportMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(reportMainPanelLayout.createSequentialGroup()
                                        .addComponent(jLabel13)
                                        .addGap(611, 611, 611)
                                        .addComponent(reportsHomeButton))
                                    .addGroup(reportMainPanelLayout.createSequentialGroup()
                                        .addGroup(reportMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(reportMainPanelLayout.createSequentialGroup()
                                                .addGap(18, 18, 18)
                                                .addGroup(reportMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(reportMainPanelLayout.createSequentialGroup()
                                                        .addGap(2, 2, 2)
                                                        .addComponent(reportPrintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(reportsAllItemsRadioButton)
                                                    .addGroup(reportMainPanelLayout.createSequentialGroup()
                                                        .addGap(21, 21, 21)
                                                        .addComponent(reportsTypesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(reportsCheckedOutItemsRadioButton)
                                                    .addGroup(reportMainPanelLayout.createSequentialGroup()
                                                        .addGap(26, 26, 26)
                                                        .addGroup(reportMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(reportsSortDateRadioButton)
                                                            .addComponent(reportsSortPatronRadioButton)))))
                                            .addGroup(reportMainPanelLayout.createSequentialGroup()
                                                .addGap(5, 5, 5)
                                                .addComponent(jLabel7)))
                                        .addGap(18, 18, 18)
                                        .addComponent(reportsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 711, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(43, 43, Short.MAX_VALUE))
                        );
                        reportMainPanelLayout.setVerticalGroup(
                            reportMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(reportMainPanelLayout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(reportMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(reportsHomeButton)
                                    .addComponent(jLabel13))
                                .addGroup(reportMainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(reportMainPanelLayout.createSequentialGroup()
                                        .addGap(42, 42, 42)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(reportsAllItemsRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(reportsTypesComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(reportsCheckedOutItemsRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(reportsSortDateRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(reportsSortPatronRadioButton)
                                        .addGap(28, 28, 28)
                                        .addComponent(reportPrintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(262, 262, 262))
                                    .addGroup(reportMainPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(reportsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addContainerGap())))
                        );

                        mainMenuFile.setMnemonic('F');
                        mainMenuFile.setText("File");
                        mainMenuFile.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                mainMenuFileActionPerformed(evt);
                            }
                        });

                        saveChangesMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
                        saveChangesMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/save16.png"))); // NOI18N
                        saveChangesMenuItem.setText("Save Changes");
                        saveChangesMenuItem.setIconTextGap(6);
                        saveChangesMenuItem.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                saveChangesMenuItemActionPerformed(evt);
                            }
                        });
                        mainMenuFile.add(saveChangesMenuItem);

                        generateBackupMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/backup16.png"))); // NOI18N
                        generateBackupMenuItem.setText("Generate Backup Files");
                        generateBackupMenuItem.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                generateBackupMenuItemActionPerformed(evt);
                            }
                        });
                        mainMenuFile.add(generateBackupMenuItem);

                        restoreBackupMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/key16.png"))); // NOI18N
                        restoreBackupMenuItem.setText("Restore From Backup");
                        restoreBackupMenuItem.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                restoreBackupMenuItemActionPerformed(evt);
                            }
                        });
                        mainMenuFile.add(restoreBackupMenuItem);

                        menuBar.add(mainMenuFile);

                        mainMenuHelp.setMnemonic('H');
                        mainMenuHelp.setText("Help");
                        mainMenuHelp.addMouseListener(new java.awt.event.MouseAdapter() {
                            public void mouseClicked(java.awt.event.MouseEvent evt) {
                                mainMenuHelpMouseClicked(evt);
                            }
                        });
                        mainMenuHelp.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                mainMenuHelpActionPerformed(evt);
                            }
                        });
                        mainMenuHelp.addMenuKeyListener(new javax.swing.event.MenuKeyListener() {
                            public void menuKeyPressed(javax.swing.event.MenuKeyEvent evt) {
                                mainMenuHelpMenuKeyPressed(evt);
                            }
                            public void menuKeyReleased(javax.swing.event.MenuKeyEvent evt) {
                            }
                            public void menuKeyTyped(javax.swing.event.MenuKeyEvent evt) {
                            }
                        });

                        helpContentsMenuItem.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F1, 0));
                        helpContentsMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/help16.png"))); // NOI18N
                        helpContentsMenuItem.setMnemonic(KeyEvent.VK_F1);
                        helpContentsMenuItem.setText("Help Contents");
                        helpContentsMenuItem.setMnemonic(KeyEvent.VK_F1);
                        helpContentsMenuItem.setIconTextGap(6);
                        helpContentsMenuItem.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                helpContentsMenuItemActionPerformed(evt);
                            }
                        });
                        mainMenuHelp.add(helpContentsMenuItem);

                        aboutMenuItem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dap/Images/about16.png"))); // NOI18N
                        aboutMenuItem.setMnemonic('A');
                        aboutMenuItem.setText("About");
                        aboutMenuItem.setIconTextGap(6);
                        aboutMenuItem.addActionListener(new java.awt.event.ActionListener() {
                            public void actionPerformed(java.awt.event.ActionEvent evt) {
                                aboutMenuItemActionPerformed(evt);
                            }
                        });
                        mainMenuHelp.add(aboutMenuItem);

                        menuBar.add(mainMenuHelp);

                        mainMenuOptions.setMnemonic('O');
                        mainMenuOptions.setText("Options");

                        instaSearchOnMenuItem.setSelected(true);
                        instaSearchOnMenuItem.setText("Insta-Search On");
                        instaSearchOnMenuItem.setToolTipText("Turn Insta-Search On and Off");
                        instaSearchOnMenuItem.setBorderPainted(true);
                        mainMenuOptions.add(instaSearchOnMenuItem);

                        menuBar.add(mainMenuOptions);

                        setJMenuBar(menuBar);

                        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
                        getContentPane().setLayout(layout);
                        layout.setHorizontalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGap(0, 1173, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 207, Short.MAX_VALUE)
                                    .addComponent(typesMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 208, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 176, Short.MAX_VALUE)
                                    .addComponent(catalogMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 177, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(10, 10, 10)
                                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(573, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 196, Short.MAX_VALUE)
                                    .addComponent(searchResultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 196, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 0, 0)
                                    .addComponent(checkoutMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(415, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(29, 29, 29)
                                    .addComponent(patronsMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(304, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 142, Short.MAX_VALUE)
                                    .addComponent(reportMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 143, Short.MAX_VALUE)))
                        );
                        layout.setVerticalGroup(
                            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGap(0, 1182, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 414, Short.MAX_VALUE)
                                    .addComponent(typesMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 268, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 316, Short.MAX_VALUE)
                                    .addComponent(catalogMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 316, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(5, 5, 5)
                                    .addComponent(mainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(887, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 409, Short.MAX_VALUE)
                                    .addComponent(searchResultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 409, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 0, 0)
                                    .addComponent(checkoutMainPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addContainerGap(705, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(16, 16, 16)
                                    .addComponent(patronsMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addContainerGap(546, Short.MAX_VALUE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(0, 309, Short.MAX_VALUE)
                                    .addComponent(reportMainPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(0, 310, Short.MAX_VALUE)))
                        );

                        pack();
                    }// </editor-fold>//GEN-END:initComponents

private void mainPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mainPanelFocusGained
   
}//GEN-LAST:event_mainPanelFocusGained
private void mainPanelComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_mainPanelComponentShown
// TODO add your handling code here:
        
}//GEN-LAST:event_mainPanelComponentShown

private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
// TODO add your handling code here:
    
    
    
}//GEN-LAST:event_formWindowOpened

    private void catalogHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogHomeButtonActionPerformed
        catalogMainPanel.setVisible(false);  //goes back to home panel after closing current panel and clearing contents
        mainPanel.setVisible(true);
        DAPUtil.setScreenSize("home");
        
        DataInit.hashmapToArrayLibrary();
        DAP.catalogTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.itemsData, DAPMain.itemsHeader));
        
        refreshTextFields("catalog",true,false);
        
//        catalogTypeTextField.setText(""); //clears all text fields
//        catalogAuthorTextField.setText("");
//        catalogItemTextField.setText("");
//        catalogPublishedDateTextField.setText("");
//        catalogItemNumberTextField.setText("");
//                
//        catalogTypeTextField.setEditable(false);//sets all text fields to un-editable
//        catalogAuthorTextField.setEditable(false);
//        catalogItemTextField.setEditable(false);
//        catalogPublishedDateTextField.setEditable(false);
//        catalogItemNumberTextField.setEditable(false);
        
        catalogCancelButton.setEnabled(false);//only enables the appropriate buttons
        catalogSaveButton.setEnabled(false);
        catalogNewButton.setEnabled(true);
        catalogRemoveButton.setEnabled(true);
        catalogEditButton.setEnabled(true);
        
        catalogTable.setRowSelectionAllowed(true);//allows selection in the table
        
        toggleEnableBackupButton(true);
    }//GEN-LAST:event_catalogHomeButtonActionPerformed

    private void typesHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesHomeButtonActionPerformed
        typesMainPanel.setVisible(false);//goes back to home panel after closing current panel and clearing contents
        mainPanel.setVisible(true);
        DAPUtil.setScreenSize("home");
        
        typesTypeTextField.setText("");
        typesDescriptionTextField.setText("");
        
        typesTypeTextField.setEditable(false);
        typesDescriptionTextField.setEditable(false);
        
        typesNewButton.setEnabled(true);
        typesRemoveButton.setEnabled(true);
        typesCancelButton.setEnabled(false);
        typesEditButton.setEnabled(true);
        typesSaveButton.setEnabled(false);
        
        typesTable.setRowSelectionAllowed(true);
        
        toggleEnableBackupButton(true);
    }//GEN-LAST:event_typesHomeButtonActionPerformed

    private void patronsRemoveDialogYesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronsRemoveDialogYesButtonActionPerformed
        int numRows = patronsTable.getRowCount();
        int numColumns = patronsTable.getColumnCount();

        if(Patrons.isPatronInUse(DAPMain.patronsData[DAP.patronsTable.getSelectedRow()][0]))//checks if this patron has items checked out
        {
            patronsRemoveDialog.setVisible(false);
            DAP.displayErrorMessage("This patron has items checked out."+'\n'+"It cannot be removed!");
        }
        else
        {
            Patrons.removePatron();//removes the patron
        }

            
        patronsRemoveDialog.setVisible(false);
        
        refreshTextFields("patrons",true,false);
        
//        patronNumberTextField.setText("");//clears all text fields
//        firstNameTextField.setText("");
//        lastNameTextField.setText("");
//        emailTextField.setText("");
//        phoneTextField.setText("");
//        addressTextField.setText("");
//        cityTextField.setText("");
//        stateTextField.setText("");
//        zipCodeTextField.setText("");
        
        patronsTable.requestFocus();
    }//GEN-LAST:event_patronsRemoveDialogYesButtonActionPerformed

    private void patronsRemoveDialogNoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronsRemoveDialogNoButtonActionPerformed
        patronsRemoveDialog.setVisible(false);
        
    }//GEN-LAST:event_patronsRemoveDialogNoButtonActionPerformed

    private void typesEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesEditButtonActionPerformed
        if(typesTable.getSelectedRow()!=-1)
        {
            DAPMain.editOrNew = "edit";//makes global variable set to edit, signifying that the last function called was an edit(not new)

            typesTypeTextField.setText(DAPMain.typesData[typesTable.getSelectedRow()][0]);//sets the text fields below with the selected data
            typesDescriptionTextField.setText(DAPMain.typesData[typesTable.getSelectedRow()][1]);

            typesTypeTextField.requestFocus();
            
            typesTypeTextField.setEditable(true);
            typesDescriptionTextField.setEditable(true);
            
            typesNewButton.setEnabled(false);
            typesEditButton.setEnabled(false);
            typesRemoveButton.setEnabled(false);            
            typesCancelButton.setEnabled(true);
            typesSaveButton.setEnabled(true);
            
            typesTable.setRowSelectionAllowed(false);
            
        }
    }//GEN-LAST:event_typesEditButtonActionPerformed

    private void typesSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesSaveButtonActionPerformed

        typesTypeTextField.setEditable(false);
        typesDescriptionTextField.setEditable(false);
        
        typesNewButton.setEnabled(true);
        typesRemoveButton.setEnabled(true);
        typesEditButton.setEnabled(true);
        typesCancelButton.setEnabled(false);
        typesSaveButton.setEnabled(false);

        
        Types.saveType();
        
        
        
        //typesTable.setRowSelectionAllowed(true);
    }//GEN-LAST:event_typesSaveButtonActionPerformed

    private void typesCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesCancelButtonActionPerformed
        typesTypeTextField.setText("");
        typesDescriptionTextField.setText("");
        
        typesTypeTextField.setEditable(false);
        typesDescriptionTextField.setEditable(false);
        
        typesNewButton.setEnabled(true);
        typesRemoveButton.setEnabled(true);
        typesCancelButton.setEnabled(false);
        typesEditButton.setEnabled(true);
        typesSaveButton.setEnabled(false);
        
        typesTable.setRowSelectionAllowed(true);
        
    }//GEN-LAST:event_typesCancelButtonActionPerformed

    private void typesRemoveDialogYesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesRemoveDialogYesButtonActionPerformed
        if(Types.isTypeInUse(DAPMain.typesData[DAP.typesTable.getSelectedRow()][0]))
        {
            DAP.displayErrorMessage("This type is already in use by one or more items in the library."+'\n'+"It cannot be removed!");
            typesRemoveDialog.setVisible(false);
        }
        else
        {
            Types.removeType();
        }
        
        typesRemoveDialog.setVisible(false);
        
        typesTypeTextField.setText("");
        typesDescriptionTextField.setText("");
        
        typesTable.requestFocus();
    }//GEN-LAST:event_typesRemoveDialogYesButtonActionPerformed

    private void typesRemoveDialogNoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesRemoveDialogNoButtonActionPerformed
       typesRemoveDialog.setVisible(false);
    }//GEN-LAST:event_typesRemoveDialogNoButtonActionPerformed

    private void typesNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesNewButtonActionPerformed
    
        DAPMain.editOrNew = "new";
        
        typesTypeTextField.requestFocus();
      
        typesTypeTextField.setEditable(true);
        typesDescriptionTextField.setEditable(true);
        
        typesTypeTextField.setText("");
        typesDescriptionTextField.setText("");
        
        typesNewButton.setEnabled(false);
        typesRemoveButton.setEnabled(false);
        typesEditButton.setEnabled(false);
        typesCancelButton.setEnabled(true);
        typesSaveButton.setEnabled(true);
        
        typesTable.setRowSelectionAllowed(false);
    }//GEN-LAST:event_typesNewButtonActionPerformed

    private void catalogNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogNewButtonActionPerformed
    
        DAPMain.editOrNew = "new";
        
        refreshTextFields("catalog",true,true);
        
//        catalogTypeTextField.setEditable(true);
//        catalogAuthorTextField.setEditable(true);
//        catalogItemTextField.setEditable(true);
//        catalogPublishedDateTextField.setEditable(true);
//        catalogItemNumberTextField.setEditable(true);
//                
//        catalogTypeTextField.setText("");
//        catalogAuthorTextField.setText("");
//        catalogItemTextField.setText("");
//        catalogPublishedDateTextField.setText("");
//        catalogItemNumberTextField.setText("");
                
        catalogTable.setRowSelectionAllowed(false);
        
        catalogCancelButton.setEnabled(true);
        catalogSaveButton.setEnabled(true);
        catalogEditButton.setEnabled(false);
        catalogRemoveButton.setEnabled(false);
        catalogNewButton.setEnabled(false);
        
        catalogItemNumberTextField.requestFocus();
        
       
    }//GEN-LAST:event_catalogNewButtonActionPerformed

    private void catalogRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogRemoveButtonActionPerformed
        if(catalogTable.getSelectedRow()!=-1)
        {
            catalogRemoveDialogItemName.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][1]+"   by   "+DAPMain.itemsData[catalogTable.getSelectedRow()][2]);
            catalogRemoveDialog.setVisible(true);            
        }
    }//GEN-LAST:event_catalogRemoveButtonActionPerformed

    private void catalogRemoveDialogYesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogRemoveDialogYesButtonActionPerformed

        if(Library.isItemInUse(DAPMain.itemsData[DAP.catalogTable.getSelectedRow()][0]))
        {
            DAP.displayErrorMessage("This item is currently Checked Out."+'\n'+"It cannot be removed!");
            catalogRemoveDialog.setVisible(false);
        }
        else
        {
            Library.removeLibrary();
        }
        
        
        refreshTextFields("catalog",true,false);
        
//        catalogTypeTextField.setText("");
//        catalogAuthorTextField.setText("");
//        catalogItemTextField.setText("");
//        catalogPublishedDateTextField.setText("");
//        catalogItemNumberTextField.setText("");                
        
        catalogTable.requestFocus();
        
        catalogRemoveDialog.setVisible(false);
    }//GEN-LAST:event_catalogRemoveDialogYesButtonActionPerformed

    private void catalogRemoveDialogNoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogRemoveDialogNoButtonActionPerformed
        catalogRemoveDialog.setVisible(false);
    }//GEN-LAST:event_catalogRemoveDialogNoButtonActionPerformed

    private void catalogEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogEditButtonActionPerformed
        
        DAPMain.editOrNew = "edit";
                
        if(catalogTable.getSelectedRow()!=-1)//checks to make sure something is selected in the table
        {   
            refreshTextFields("catalog",false,true);
            
//            catalogTypeTextField.setEditable(true);
//            catalogAuthorTextField.setEditable(true);
//            catalogItemTextField.setEditable(true);
//            catalogPublishedDateTextField.setEditable(true);
//            catalogItemNumberTextField.setEditable(true);
            
            catalogItemNumberTextField.requestFocus();
                        
            catalogTable.setRowSelectionAllowed(false);

            catalogCancelButton.setEnabled(true);
            catalogSaveButton.setEnabled(true);
            catalogNewButton.setEnabled(false);
            catalogEditButton.setEnabled(false);
            catalogRemoveButton.setEnabled(false);
                        
//            catalogItemNumberTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][0]);            
//            catalogItemTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][1]);
//            catalogAuthorTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][2]);
//            catalogPublishedDateTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][3]);
//            catalogTypeTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][4]);
                        
            catalogTable.setRowSelectionAllowed(false);
            
            
        }
    }//GEN-LAST:event_catalogEditButtonActionPerformed

    private void checkoutTitleTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutTitleTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutTitleTextFieldActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        mainPanel.setVisible(true);
        checkoutMainPanel.setVisible(false);
        DAPUtil.setScreenSize("home");//sets the size of the frame to fit the home screen 
        
        checkoutPatronNumberTextField.setText("Click on Search or Enter Patron ID");
        checkoutPatronNameTextField.setText("Patron Name...");
        checkoutItemNumberTextField.setText("Click on Search or Enter Item #");
        checkoutTitleTextField.setText("Title...");
        checkoutAuthorTextField.setText("Author...");
        checkoutTypeTextField.setText("Type...");
        
        String[] header = {"Item#", "Title", "Author", "Type", "Date Out", "Date Due"};
        checkoutTable.setModel(new javax.swing.table.DefaultTableModel(new Object [][] {},header ));
        
        toggleEnableBackupButton(true);
    }//GEN-LAST:event_jButton4ActionPerformed
    
    private void catalogSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogSaveButtonActionPerformed
         
        
        
        catalogTypeTextField.setEditable(false);
        catalogAuthorTextField.setEditable(false);
        catalogItemTextField.setEditable(false);
        catalogPublishedDateTextField.setEditable(false);
        catalogItemNumberTextField.setEditable(false);
                
        catalogCancelButton.setEnabled(false);
        catalogSaveButton.setEnabled(false);
        catalogNewButton.setEnabled(true);
        catalogRemoveButton.setEnabled(true);
        catalogEditButton.setEnabled(true);
        
        Library.saveCatalog();
        
        //refreshTextFields("catalog",true,false);
               
         //DAP.catalogFullCatalogButton.setVisible(false);                
        
        //catalogTable.setRowSelectionAllowed(true);
        
        
    }//GEN-LAST:event_catalogSaveButtonActionPerformed

    private void catalogCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogCancelButtonActionPerformed
        
        refreshTextFields("catalog",true,false);
        
//        catalogTypeTextField.setText("");
//        catalogAuthorTextField.setText("");
//        catalogItemTextField.setText("");
//        catalogPublishedDateTextField.setText("");
//        catalogItemNumberTextField.setText("");
//                
//        catalogTypeTextField.setEditable(false);
//        catalogAuthorTextField.setEditable(false);
//        catalogItemTextField.setEditable(false);
//        catalogPublishedDateTextField.setEditable(false);
//        catalogItemNumberTextField.setEditable(false);
                
        catalogCancelButton.setEnabled(false);
        catalogSaveButton.setEnabled(false);
        catalogNewButton.setEnabled(true);
        catalogRemoveButton.setEnabled(true);
        catalogEditButton.setEnabled(true);
        
        catalogSearchButton.setEnabled(true);
        
        catalogTable.setRowSelectionAllowed(true);
    }//GEN-LAST:event_catalogCancelButtonActionPerformed

    private void typesRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_typesRemoveButtonActionPerformed
        if(typesTable.getSelectedRow()!=-1)
        {
            typesRemoveDialogTypeName.setText(DAPMain.typesData[typesTable.getSelectedRow()][0]);
            typesRemoveDialog.setVisible(true);            
        }
    }//GEN-LAST:event_typesRemoveButtonActionPerformed

    private void mainSearchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mainSearchTextFieldFocusGained
        if(mainSearchTextField.getText().equals("Search Catalog..."))
            mainSearchTextField.setText("");
        else
            mainSearchTextField.selectAll();
    }//GEN-LAST:event_mainSearchTextFieldFocusGained

    private void mainSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSearchButtonActionPerformed
        String searchCategory = mainSearchComboBox.getSelectedItem().toString();
        String search = mainSearchTextField.getText();  
        
        search = search.toLowerCase();
        
        if(!search.equals("Search Catalog...") && !search.equals(""))
            DAPUtil.search("mainPanel",searchCategory,search);
               
    }//GEN-LAST:event_mainSearchButtonActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        searchResultsPanel.setVisible(false);
        mainPanel.setVisible(true);
        DAPUtil.setScreenSize("home");
        DataInit.hashmapToArrayLibrary();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void catalogTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_catalogTableMouseClicked
        if(catalogTable.getRowSelectionAllowed())
        {
            refreshTextFields("catalog",false,false);
            
//            catalogItemNumberTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][0]);            
//            catalogItemTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][1]);
//            catalogAuthorTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][2]);
//            catalogPublishedDateTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][3]);
//            catalogTypeTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][4]);

        }
    }//GEN-LAST:event_catalogTableMouseClicked

    private void catalogTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catalogTableKeyPressed
        int key = evt.getKeyCode();
        int currentRowIndex = catalogTable.getSelectedRow();
        
        if(catalogTable.getRowSelectionAllowed())
        {
            if(key == KeyEvent.VK_UP)//adds up key functionality to browse the table
            {
                if(currentRowIndex!=0)
                {                                        
                    catalogItemNumberTextField.setText(DAPMain.itemsData[currentRowIndex-1][0]);            
                    catalogItemTextField.setText(DAPMain.itemsData[currentRowIndex-1][1]);
                    catalogAuthorTextField.setText(DAPMain.itemsData[currentRowIndex-1][2]);
                    catalogPublishedDateTextField.setText(DAPMain.itemsData[currentRowIndex-1][3]);
                    catalogTypeTextField.setText(DAPMain.itemsData[currentRowIndex-1][4]);
                    
                }

            }
            else if(key == KeyEvent.VK_DOWN)//adds down key functionality to browse the table
            {
                if(currentRowIndex!=catalogTable.getRowCount()-1)
                {
                    catalogItemNumberTextField.setText(DAPMain.itemsData[currentRowIndex+1][0]);            
                    catalogItemTextField.setText(DAPMain.itemsData[currentRowIndex+1][1]);
                    catalogAuthorTextField.setText(DAPMain.itemsData[currentRowIndex+1][2]);
                    catalogPublishedDateTextField.setText(DAPMain.itemsData[currentRowIndex+1][3]);
                    catalogTypeTextField.setText(DAPMain.itemsData[currentRowIndex+1][4]);
                    
                }
            }
            else if(key == KeyEvent.VK_ENTER)//allows enter key functionailty for browsing the table
            {
                if(currentRowIndex!=catalogTable.getRowCount()-1)
                {
                    catalogItemNumberTextField.setText(DAPMain.itemsData[currentRowIndex+1][0]);            
                    catalogItemTextField.setText(DAPMain.itemsData[currentRowIndex+1][1]);
                    catalogAuthorTextField.setText(DAPMain.itemsData[currentRowIndex+1][2]);
                    catalogPublishedDateTextField.setText(DAPMain.itemsData[currentRowIndex+1][3]);
                    catalogTypeTextField.setText(DAPMain.itemsData[currentRowIndex+1][4]);
                }
                
                else if(currentRowIndex==catalogTable.getRowCount()-1)
                {
                    catalogItemNumberTextField.setText(DAPMain.itemsData[0][0]);            
                    catalogItemTextField.setText(DAPMain.itemsData[0][1]);
                    catalogAuthorTextField.setText(DAPMain.itemsData[0][2]);
                    catalogPublishedDateTextField.setText(DAPMain.itemsData[0][3]);
                    catalogTypeTextField.setText(DAPMain.itemsData[0][4]);
                }



            }
        }
    }//GEN-LAST:event_catalogTableKeyPressed

    private void patronsCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronsCancelButtonActionPerformed
        
        refreshTextFields("patrons",true,false);
        
//        patronNumberTextField.setText("");
//        firstNameTextField.setText("");
//        lastNameTextField.setText("");
//        emailTextField.setText("");
//        phoneTextField.setText("");
//        addressTextField.setText("");
//        cityTextField.setText("");
//        stateTextField.setText("");
//        zipCodeTextField.setText("");
//        
//        
//        patronNumberTextField.setEditable(false);
//        firstNameTextField.setEditable(false);
//        lastNameTextField.setEditable(false);
//        emailTextField.setEditable(false);
//        phoneTextField.setEditable(false);
//        addressTextField.setEditable(false);
//        cityTextField.setEditable(false);
//        stateTextField.setEditable(false);
//        zipCodeTextField.setEditable(false);
        
        patronSearchButton.setEnabled(true);

        patronsTable.setRowSelectionAllowed(true);

        patronsRemoveButton.setEnabled(true);
        patronsNewButton.setEnabled(true);
        patronsEditButton.setEnabled(true);
        patronsCancelButton.setEnabled(false);
        patronsSaveButton.setEnabled(false);
    }//GEN-LAST:event_patronsCancelButtonActionPerformed

    private void patronsHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronsHomeButtonActionPerformed
        patronsMainPanel.setVisible(false);
        mainPanel.setVisible(true);
        DAPUtil.setScreenSize("home");
        
        DataInit.hashmapToArrayPatrons();
        DAP.patronsTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.patronsData, DAPMain.patronsHeader));
        
        refreshTextFields("patrons",true,false);
        
//        patronNumberTextField.setText("");
//        firstNameTextField.setText("");
//        lastNameTextField.setText("");
//        emailTextField.setText("");
//        phoneTextField.setText("");
//        addressTextField.setText("");
//        cityTextField.setText("");
//        stateTextField.setText("");
//        zipCodeTextField.setText("");
//       
//        
//        patronNumberTextField.setEditable(false);
//        firstNameTextField.setEditable(false);
//        lastNameTextField.setEditable(false);
//        emailTextField.setEditable(false);
//        phoneTextField.setEditable(false);
//        addressTextField.setEditable(false);
//        cityTextField.setEditable(false);
//        stateTextField.setEditable(false);
//        zipCodeTextField.setEditable(false);
        
        
        

        patronsTable.setRowSelectionAllowed(true);

        patronsRemoveButton.setEnabled(true);
        patronsNewButton.setEnabled(true);
        patronsEditButton.setEnabled(true);
        patronsCancelButton.setEnabled(false);
        patronsSaveButton.setEnabled(false);
        
        toggleEnableBackupButton(true);
    }//GEN-LAST:event_patronsHomeButtonActionPerformed

    private void patronNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patronNumberTextFieldActionPerformed

    private void emailTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailTextFieldActionPerformed

    private void patronsSaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronsSaveButtonActionPerformed
        patronsRemoveButton.setEnabled(true);//enabled appropriate buttons        
        patronsNewButton.setEnabled(true);
        patronsCancelButton.setEnabled(false);
        patronsSaveButton.setEnabled(false);
        patronsEditButton.setEnabled(true);

//        patronNumberTextField.setEditable(false);//makes all fields uneditable
//        firstNameTextField.setEditable(false);
//        lastNameTextField.setEditable(false);
//        emailTextField.setEditable(false);
//        phoneTextField.setEditable(false);
//        addressTextField.setEditable(false);
//        cityTextField.setEditable(false);
//        stateTextField.setEditable(false);
//        zipCodeTextField.setEditable(false);
//        refreshTextFields("patrons",true,false);
        Patrons.savePatron(); //calls the save patron method before clearing fields
        
        

//        patronNumberTextField.setText("");//empties all fields        
//        firstNameTextField.setText("");
//        lastNameTextField.setText("");
//        emailTextField.setText("");
//        phoneTextField.setText("");
//        addressTextField.setText("");
//        cityTextField.setText("");
//        stateTextField.setText("");
//        zipCodeTextField.setText("");
        

        //patronsTable.setRowSelectionAllowed(true);//allows user to use the table again
    }//GEN-LAST:event_patronsSaveButtonActionPerformed

    private void patronsNewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronsNewButtonActionPerformed

        DAPMain.editOrNew = "new";
      
        refreshTextFields("patrons",true,true);
        
//        patronNumberTextField.setEditable(true);
//        firstNameTextField.setEditable(true);
//        lastNameTextField.setEditable(true);
//        emailTextField.setEditable(true);
//        phoneTextField.setEditable(true);
//        addressTextField.setEditable(true);
//        cityTextField.setEditable(true);
//        stateTextField.setEditable(true);
//        zipCodeTextField.setEditable(true);
        
        
        patronsTable.setRowSelectionAllowed(false);
        
//        patronNumberTextField.setText("");
//        firstNameTextField.setText("");
//        lastNameTextField.setText("");
//        emailTextField.setText("");
//        phoneTextField.setText("");
//        addressTextField.setText("");
//        cityTextField.setText("");
//        stateTextField.setText("");
//        zipCodeTextField.setText("");
        
        //patronNumberTextField.select();
        

        patronsRemoveButton.setEnabled(false);
        patronsNewButton.setEnabled(false);
        patronsEditButton.setEnabled(false);
        patronsCancelButton.setEnabled(true);
        patronsSaveButton.setEnabled(true);
        patronsTable.setRowSelectionAllowed(false);
        patronNumberTextField.requestFocus();        

    }//GEN-LAST:event_patronsNewButtonActionPerformed

    private void patronsRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronsRemoveButtonActionPerformed
        if(patronsTable.getSelectedRow()!=-1)
        {
            
            patronsRemoveDialogPatronName.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][1]+" "+DAPMain.patronsData[patronsTable.getSelectedRow()][2]);
            patronsRemoveDialog.setVisible(true);
            
        }
    }//GEN-LAST:event_patronsRemoveButtonActionPerformed

    private void patronsEditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronsEditButtonActionPerformed

       if(patronsTable.getSelectedRow()!=-1)
        {
            
            DAPMain.editOrNew = "edit";
            
            patronNumberTextField.requestFocus();
           
//            patronNumberTextField.setEditable(true);
//            firstNameTextField.setEditable(true);
//            lastNameTextField.setEditable(true);
//            emailTextField.setEditable(true);
//            phoneTextField.setEditable(true);
//            addressTextField.setEditable(true);
//            cityTextField.setEditable(true); 
//            stateTextField.setEditable(true);
//            zipCodeTextField.setEditable(true);
            
           
            Patrons.setOriginalPatronId(DAPMain.patronsData[patronsTable.getSelectedRow()][0]);
            
//            patronNumberTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][0]);
//            firstNameTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][1]);
//            lastNameTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][2]);
//            emailTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][3]);
//            phoneTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][4]);
//            addressTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][5]);
//            cityTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][6]);   
//            stateTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][7]);
//            zipCodeTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][8]);
            
            refreshTextFields("patrons",false,true);
            
            patronsTable.setRowSelectionAllowed(false);
            
            patronsRemoveButton.setEnabled(false);
            patronsNewButton.setEnabled(false);
            patronsEditButton.setEnabled(false);
            patronsCancelButton.setEnabled(true);
            patronsSaveButton.setEnabled(true);
            
            
        }
    }//GEN-LAST:event_patronsEditButtonActionPerformed

    private void patronsTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patronsTableKeyPressed
        int key = evt.getKeyCode();
        int currentRowIndex = patronsTable.getSelectedRow();
        
       if(patronsTable.getRowSelectionAllowed())
       {
            if(key == KeyEvent.VK_UP)//allows up key functionality for browsing the table
            {
                if(currentRowIndex!=0)
                {
                    patronNumberTextField.setText(DAPMain.patronsData[currentRowIndex-1][0]);
                    firstNameTextField.setText(DAPMain.patronsData[currentRowIndex-1][1]);
                    lastNameTextField.setText(DAPMain.patronsData[currentRowIndex-1][2]);
                    emailTextField.setText(DAPMain.patronsData[currentRowIndex-1][3]);
                    phoneTextField.setText(DAPMain.patronsData[currentRowIndex-1][4]);
                    addressTextField.setText(DAPMain.patronsData[currentRowIndex-1][5]);
                    cityTextField.setText(DAPMain.patronsData[currentRowIndex-1][6]);   
                    stateTextField.setText(DAPMain.patronsData[currentRowIndex-1][7]);
                    zipCodeTextField.setText(DAPMain.patronsData[currentRowIndex-1][8]);
                    
                }
            }

            else if(key == KeyEvent.VK_DOWN)//allows the down key functionality for browsing the table
            {
                if(currentRowIndex!=patronsTable.getRowCount()-1)
                {
                    patronNumberTextField.setText(DAPMain.patronsData[currentRowIndex+1][0]);
                    firstNameTextField.setText(DAPMain.patronsData[currentRowIndex+1][1]);
                    lastNameTextField.setText(DAPMain.patronsData[currentRowIndex+1][2]);
                    emailTextField.setText(DAPMain.patronsData[currentRowIndex+1][3]);
                    phoneTextField.setText(DAPMain.patronsData[currentRowIndex+1][4]);
                    addressTextField.setText(DAPMain.patronsData[currentRowIndex+1][5]);
                    cityTextField.setText(DAPMain.patronsData[currentRowIndex+1][6]);   
                    stateTextField.setText(DAPMain.patronsData[currentRowIndex+1][7]);
                    zipCodeTextField.setText(DAPMain.patronsData[currentRowIndex+1][8]);
                    
                }
            }
            else if(key == KeyEvent.VK_ENTER)//allows enter key functinality for browsig the table
            {
                if(currentRowIndex!=patronsTable.getRowCount()-1)
                {
                    patronNumberTextField.setText(DAPMain.patronsData[currentRowIndex+1][0]);
                    firstNameTextField.setText(DAPMain.patronsData[currentRowIndex+1][1]);
                    lastNameTextField.setText(DAPMain.patronsData[currentRowIndex+1][2]);
                    emailTextField.setText(DAPMain.patronsData[currentRowIndex+1][3]);
                    phoneTextField.setText(DAPMain.patronsData[currentRowIndex+1][4]);
                    addressTextField.setText(DAPMain.patronsData[currentRowIndex+1][5]);
                    cityTextField.setText(DAPMain.patronsData[currentRowIndex+1][6]);   
                    stateTextField.setText(DAPMain.patronsData[currentRowIndex+1][7]);
                    zipCodeTextField.setText(DAPMain.patronsData[currentRowIndex+1][8]);
                   
                }
                
                else if(currentRowIndex==patronsTable.getRowCount()-1)
                {
                    patronNumberTextField.setText(DAPMain.patronsData[01][0]);
                    firstNameTextField.setText(DAPMain.patronsData[0][1]);
                    lastNameTextField.setText(DAPMain.patronsData[0][2]);
                    emailTextField.setText(DAPMain.patronsData[0][3]);
                    phoneTextField.setText(DAPMain.patronsData[0][4]);
                    addressTextField.setText(DAPMain.patronsData[0][5]);
                    cityTextField.setText(DAPMain.patronsData[0][6]);   
                    stateTextField.setText(DAPMain.patronsData[0][7]);
                    zipCodeTextField.setText(DAPMain.patronsData[0][8]);
                    
                }



            }
       }
    }//GEN-LAST:event_patronsTableKeyPressed

    private void patronsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_patronsTableMouseClicked
       if(patronsTable.getRowSelectionAllowed())//when a row is clicked on, the fields get populated
        {
           refreshTextFields("patrons",false,false);
           
//            patronNumberTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][0]);
//            firstNameTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][1]);
//            lastNameTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][2]);
//            emailTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][3]);
//            phoneTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][4]);
//            addressTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][5]);
//            cityTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][6]);   
//            stateTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][7]);
//            zipCodeTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][8]);
            
        }
    }//GEN-LAST:event_patronsTableMouseClicked

    private void checkoutAuthorTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutAuthorTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutAuthorTextFieldActionPerformed

    private void typesTableKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_typesTableKeyPressed
        int key = evt.getKeyCode();
        int currentRowIndex = typesTable.getSelectedRow();
        
        if(typesTable.getRowSelectionAllowed())
        {
            if(key == KeyEvent.VK_UP)
            {
                if(currentRowIndex!=0)
                {
                    typesTypeTextField.setText(DAPMain.typesData[currentRowIndex-1][0]);
                    typesDescriptionTextField.setText(DAPMain.typesData[currentRowIndex-1][1]);
                }
            }
            else if(key == KeyEvent.VK_DOWN)
            {
                if(currentRowIndex!=typesTable.getRowCount()-1)
                {
                    typesTypeTextField.setText(DAPMain.typesData[currentRowIndex+1][0]);
                    typesDescriptionTextField.setText(DAPMain.typesData[currentRowIndex+1][1]);
                }
            }
            else if(key == KeyEvent.VK_ENTER)
            {
                if(currentRowIndex!=typesTable.getRowCount()-1)
                {
                    typesTypeTextField.setText(DAPMain.typesData[currentRowIndex+1][0]);
                    typesDescriptionTextField.setText(DAPMain.typesData[currentRowIndex+1][1]);
                }
                else if(currentRowIndex==typesTable.getRowCount()-1)
                {
                    typesTypeTextField.setText(DAPMain.typesData[0][0]);
                    typesDescriptionTextField.setText(DAPMain.typesData[0][1]);
                }
            }
        }
    }//GEN-LAST:event_typesTableKeyPressed

    private void typesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_typesTableMouseClicked
        if(typesTable.getRowSelectionAllowed())
        {                        
            typesTypeTextField.setText(DAPMain.typesData[typesTable.getSelectedRow()][0]);
            typesDescriptionTextField.setText(DAPMain.typesData[typesTable.getSelectedRow()][1]);
        }
    }//GEN-LAST:event_typesTableMouseClicked

    private void displayMessageDialogOkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_displayMessageDialogOkButtonActionPerformed
        displayMessageDialog.setVisible(false);
    }//GEN-LAST:event_displayMessageDialogOkButtonActionPerformed

    private void reportPrintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportPrintButtonActionPerformed
        try
        {
            reportTextArea.print();//prints the current report
        }
        catch(PrinterException e)
        {}
            
            
    }//GEN-LAST:event_reportPrintButtonActionPerformed

    private void reportsHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsHomeButtonActionPerformed
        mainPanel.setVisible(true);
        reportMainPanel.setVisible(false);
        DataInit.hashmapToArrayLibrary();
        DAPUtil.setScreenSize("home");                
        toggleEnableBackupButton(true);
        reportsTypesComboBox.setEnabled(true);
    }//GEN-LAST:event_reportsHomeButtonActionPerformed

    private void patronsMainPanelFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patronsMainPanelFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_patronsMainPanelFocusGained

    private void checkoutPatronNumberTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutPatronNumberTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            Patrons checkoutPatron = DAPMain.patronsMap.get(checkoutPatronNumberTextField.getText());
       
            if(checkoutPatron != null)
            {
                checkoutPatronNameTextField.setText(checkoutPatron.getFirstName()+" "+checkoutPatron.getLastName());
                ItemsOut.checkoutTableInit();
                
            }
            else
            {
                checkoutPatronNumberTextField.setText("Enter Valid Patron# First !");
                checkoutPatronNumberTextField.selectAll();

                checkoutPatronNameTextField.setText("Patron Name...");
                DAP.checkoutTable.setModel(new javax.swing.table.DefaultTableModel(new String[0][0], DAPMain.checkoutHeader));

                checkoutPatronNumberTextField.requestFocus();     
            }
        }
    }//GEN-LAST:event_checkoutPatronNumberTextFieldKeyPressed

    private void checkoutPatronNumberTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutPatronNumberTextFieldKeyTyped
        
        
    }//GEN-LAST:event_checkoutPatronNumberTextFieldKeyTyped

    private void typesDescriptionTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typesDescriptionTextFieldFocusGained
        if(typesDescriptionTextField.isEditable())//selects the text in a text field when focus is gained for easy editing
        {
            typesDescriptionTextField.selectAll();
        }
        
    }//GEN-LAST:event_typesDescriptionTextFieldFocusGained

    private void typesTypeTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_typesTypeTextFieldFocusGained
        if(typesTypeTextField.isEditable())//selects the text in a text field when focus is gained for easy editing
        {
            typesTypeTextField.selectAll();
        }
    }//GEN-LAST:event_typesTypeTextFieldFocusGained

    private void catalogItemNumberTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catalogItemNumberTextFieldFocusGained
        if(catalogItemNumberTextField.isEditable())//selects the text in a text field when focus is gained for easy editing
        {
            catalogItemNumberTextField.selectAll();
        }
    }//GEN-LAST:event_catalogItemNumberTextFieldFocusGained

    private void catalogItemTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catalogItemTextFieldFocusGained
        if(catalogItemTextField.isEditable())//selects the text in a text field when focus is gained for easy editing
        {
            catalogItemTextField.selectAll();
        }
    }//GEN-LAST:event_catalogItemTextFieldFocusGained

    private void catalogTypeTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catalogTypeTextFieldFocusGained
        if(catalogTypeTextField.isEditable())//selects the text in a text field when focus is gained for easy editing
        {
            catalogTypeTextField.selectAll();
        }
    }//GEN-LAST:event_catalogTypeTextFieldFocusGained

    private void catalogPublishedDateTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catalogPublishedDateTextFieldFocusGained
        if(catalogPublishedDateTextField.isEditable())//selects the text in a text field when focus is gained for easy editing
        {
            catalogPublishedDateTextField.selectAll();
        }
    }//GEN-LAST:event_catalogPublishedDateTextFieldFocusGained

    private void catalogAuthorTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catalogAuthorTextFieldFocusGained
        if(catalogAuthorTextField.isEditable())
        {
            catalogAuthorTextField.selectAll();
        }
    }//GEN-LAST:event_catalogAuthorTextFieldFocusGained

    private void checkoutItemNumberTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutItemNumberTextFieldKeyTyped
       
    }//GEN-LAST:event_checkoutItemNumberTextFieldKeyTyped

    private void checkoutItemNumberTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_checkoutItemNumberTextFieldKeyPressed
        int key = evt.getKeyCode();
        
        if(key == KeyEvent.VK_TAB || key == KeyEvent.VK_ENTER)
        {
            Library checkoutLib = DAPMain.libraryMap.get(checkoutItemNumberTextField.getText());
        
            if(checkoutLib != null)
            {
                checkoutTitleTextField.setText(checkoutLib.getTitle());
                checkoutAuthorTextField.setText(checkoutLib.getAuthor());
                checkoutTypeTextField.setText(checkoutLib.getItemType());
                
                DAP.checkoutCheckoutButton.setEnabled(true);
            }
            else
            {
                checkoutTitleTextField.setText("No Item Found!");
                checkoutAuthorTextField.setText("");
                checkoutTypeTextField.setText("");
                
                DAP.checkoutCheckoutButton.setEnabled(false);
            }
        }
    }//GEN-LAST:event_checkoutItemNumberTextFieldKeyPressed

    private void checkoutPatronNumberTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkoutPatronNumberTextFieldFocusLost
                        
        Patrons checkoutPatron = DAPMain.patronsMap.get(checkoutPatronNumberTextField.getText());
       
        if(checkoutPatron != null)
        {
            checkoutPatronNameTextField.setText(checkoutPatron.getFirstName()+" "+checkoutPatron.getLastName());
            ItemsOut.checkoutTableInit();
        }        
        
    }//GEN-LAST:event_checkoutPatronNumberTextFieldFocusLost

    private void checkoutItemNumberTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkoutItemNumberTextFieldFocusLost
        Library checkoutLib = DAPMain.libraryMap.get(checkoutItemNumberTextField.getText());
        
        if(checkoutLib != null)
        {
            checkoutTitleTextField.setText(checkoutLib.getTitle());
            checkoutAuthorTextField.setText(checkoutLib.getAuthor());
            checkoutTypeTextField.setText(checkoutLib.getItemType());
            
            DAP.checkoutCheckoutButton.setEnabled(true);
        }
        else
        {
            checkoutTitleTextField.setText("No Item Found!");
            checkoutAuthorTextField.setText("");
            checkoutTypeTextField.setText("");
            
            DAP.checkoutCheckoutButton.setEnabled(false);
        }
    }//GEN-LAST:event_checkoutItemNumberTextFieldFocusLost

    private void checkoutItemNumberTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkoutItemNumberTextFieldFocusGained
        if(DAPMain.patronsMap.get(checkoutPatronNumberTextField.getText())==null)
        {
            checkoutPatronNumberTextField.setText("Enter Valid Patron# First !");
            checkoutPatronNumberTextField.selectAll();
            
            checkoutPatronNameTextField.setText("Patron Name...");
            DAP.checkoutTable.setModel(new javax.swing.table.DefaultTableModel(new String[0][0], DAPMain.checkoutHeader));
            
            checkoutPatronNumberTextField.requestFocus();                      

        }
        else
        {
            checkoutItemNumberTextField.selectAll();
        }
    }//GEN-LAST:event_checkoutItemNumberTextFieldFocusGained

    private void checkoutCheckoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutCheckoutButtonActionPerformed
        String itemNumber = checkoutItemNumberTextField.getText();
        String patronNumber = checkoutPatronNumberTextField.getText();
        
        ItemsOut.checkoutItem(itemNumber,patronNumber);
        
        ItemsOut.checkoutTableInit();//re populate the checkoutTable
        
        checkoutItemNumberTextField.setText("");
        checkoutTitleTextField.setText("");
        checkoutAuthorTextField.setText("");
        checkoutTypeTextField.setText("");
        
        DAP.checkoutCheckoutButton.setEnabled(false);
    }//GEN-LAST:event_checkoutCheckoutButtonActionPerformed

    private void checkoutReturnButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutReturnButtonActionPerformed
        if(checkoutTable.getSelectedRow() != -1)
        {
            ItemsOut.returnItem();
            ItemsOut.checkoutTableInit();//repaint the checkoutTable
        }
    }//GEN-LAST:event_checkoutReturnButtonActionPerformed

    private void checkoutReturnAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutReturnAllButtonActionPerformed
        if(checkoutTable.getRowCount() != 0)
        {
            DAP.checkoutTable.selectAll();        
            ItemsOut.returnItem();
            ItemsOut.checkoutTableInit();//repaint the checkoutTable
        }   
    }//GEN-LAST:event_checkoutReturnAllButtonActionPerformed

    private void patronNumberTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patronNumberTextFieldFocusGained
        if(patronNumberTextField.isEditable())
        {
            patronNumberTextField.selectAll();
        }
    }//GEN-LAST:event_patronNumberTextFieldFocusGained

    private void firstNameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstNameTextFieldFocusGained
        if(firstNameTextField.isEditable())
        {
            firstNameTextField.selectAll();
        }
    }//GEN-LAST:event_firstNameTextFieldFocusGained

    private void lastNameTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lastNameTextFieldFocusGained
        if(lastNameTextField.isEditable())//selects the text in a text field when focus is gained for easy editing
        {
            lastNameTextField.selectAll();
        }
    }//GEN-LAST:event_lastNameTextFieldFocusGained

    private void emailTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailTextFieldFocusGained
        if(emailTextField.isEditable())
        {
            emailTextField.selectAll();
        }
    }//GEN-LAST:event_emailTextFieldFocusGained

    private void phoneTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_phoneTextFieldFocusGained
        if(phoneTextField.isEditable())//selects the text in a text field when focus is gained for easy editing
        {
            phoneTextField.selectAll();
        }
    }//GEN-LAST:event_phoneTextFieldFocusGained

    private void addressTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addressTextFieldFocusGained
        if(addressTextField.isEditable())
        {
            addressTextField.selectAll();
        }
    }//GEN-LAST:event_addressTextFieldFocusGained

    private void cityTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cityTextFieldFocusGained
        if(cityTextField.isEditable())
        {
            cityTextField.selectAll();
        }
    }//GEN-LAST:event_cityTextFieldFocusGained

    private void stateTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_stateTextFieldFocusGained
        if(stateTextField.isEditable())//selects the text in a text field when focus is gained for easy editing
        {
            stateTextField.selectAll();
        }
    }//GEN-LAST:event_stateTextFieldFocusGained

    private void zipCodeTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_zipCodeTextFieldFocusGained
        if(zipCodeTextField.isEditable())
        {
            zipCodeTextField.selectAll();
        }
    }//GEN-LAST:event_zipCodeTextFieldFocusGained

    private void mainSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainSearchTextFieldActionPerformed
        mainSearchButton.requestFocus();
    }//GEN-LAST:event_mainSearchTextFieldActionPerformed

    private void catalogSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogSearchButtonActionPerformed

        String searchType = catalogSearchComboBox.getSelectedItem().toString();
        String searchText = catalogSearchTextField.getText().toLowerCase();
        
        DAPUtil.search("catalogMainPanel",searchType,searchText);
      
    }//GEN-LAST:event_catalogSearchButtonActionPerformed

    private void catalogSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogSearchTextFieldActionPerformed
        
    }//GEN-LAST:event_catalogSearchTextFieldActionPerformed

    private void catalogSearchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catalogSearchTextFieldFocusGained
        
        catalogSearchTextField.selectAll();

    }//GEN-LAST:event_catalogSearchTextFieldFocusGained

    private void catalogFullCatalogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogFullCatalogButtonActionPerformed
        DataInit.hashmapToArrayLibrary();        
        DAP.catalogTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.itemsData, DAPMain.itemsHeader));
        catalogFullCatalogButton.setVisible(false);

        catalogTable.setRowSelectionAllowed(true);
        DAP.catalogTable.setRowSelectionInterval(0,0);
        DAP.catalogTable.requestFocus();                
        
        refreshTextFields("catalog",true,false);
        
//        catalogTypeTextField.setEditable(false);
//        catalogAuthorTextField.setEditable(false);
//        catalogItemTextField.setEditable(false);
//        catalogPublishedDateTextField.setEditable(false);
//        catalogItemNumberTextField.setEditable(false);
                
        catalogCancelButton.setEnabled(false);
        catalogSaveButton.setEnabled(false);
        catalogNewButton.setEnabled(true);
        catalogRemoveButton.setEnabled(true);
        catalogEditButton.setEnabled(true);
        
        catalogSearchButton.setEnabled(true);
        
        catalogTable.setRowSelectionAllowed(true);

//        DAP.catalogItemNumberTextField.setText("");
//        DAP.catalogTypeTextField.setText("");
//        DAP.catalogItemTextField.setText("");
//        DAP.catalogAuthorTextField.setText("");
//        DAP.catalogPublishedDateTextField.setText("");
        
    }//GEN-LAST:event_catalogFullCatalogButtonActionPerformed

    private void patronSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronSearchButtonActionPerformed
        String searchType = patronSearchComboBox.getSelectedItem().toString();
        String searchText = patronSearchTextField.getText().toLowerCase();
        
        DAPUtil.search("patronsMainPanel",searchType,searchText);        
        
        patronNumberTextField.setText("");
        firstNameTextField.setText("");
        lastNameTextField.setText("");
        emailTextField.setText("");
        phoneTextField.setText("");
        addressTextField.setText("");
        cityTextField.setText("");
        stateTextField.setText("");
        zipCodeTextField.setText("");

        
    }//GEN-LAST:event_patronSearchButtonActionPerformed

    private void patronSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronSearchTextFieldActionPerformed
        
    }//GEN-LAST:event_patronSearchTextFieldActionPerformed

    private void patronSearchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patronSearchTextFieldFocusGained
        patronSearchTextField.selectAll();
    }//GEN-LAST:event_patronSearchTextFieldFocusGained

    private void patronsAllPatronsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronsAllPatronsButtonActionPerformed
        DataInit.hashmapToArrayPatrons();
        DAP.patronsTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.patronsData, DAPMain.patronsHeader));
        
        DAP.patronsTable.setRowSelectionInterval(0,0);
        
        patronsAllPatronsButton.setVisible(false);
        
        refreshTextFields("patrons",true,false);
        
//        patronNumberTextField.setText("");
//        firstNameTextField.setText("");
//        lastNameTextField.setText("");
//        emailTextField.setText("");
//        phoneTextField.setText("");
//        addressTextField.setText("");
//        cityTextField.setText("");
//        stateTextField.setText("");
//        zipCodeTextField.setText("");
//        
//        
//        patronNumberTextField.setEditable(false);
//        firstNameTextField.setEditable(false);
//        lastNameTextField.setEditable(false);
//        emailTextField.setEditable(false);
//        phoneTextField.setEditable(false);
//        addressTextField.setEditable(false);
//        cityTextField.setEditable(false);
//        stateTextField.setEditable(false);
//        zipCodeTextField.setEditable(false);
        
        patronSearchButton.setEnabled(true);

        patronsTable.setRowSelectionAllowed(true);

        patronsRemoveButton.setEnabled(true);
        patronsNewButton.setEnabled(true);
        patronsEditButton.setEnabled(true);
        patronsCancelButton.setEnabled(false);
        patronsSaveButton.setEnabled(false);
    }//GEN-LAST:event_patronsAllPatronsButtonActionPerformed

    private void mainFunctionsPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainFunctionsPanelMouseEntered
        Color originalColor = new Color(153,153,153);//sets the border of the panel when mouse enters
        mainFunctionsPanel.setBorder(BorderFactory.createLineBorder(Color.ORANGE, 3));
        checkoutReturnPanel.setBorder(BorderFactory.createLineBorder(originalColor,3));
    }//GEN-LAST:event_mainFunctionsPanelMouseEntered

    private void mainFunctionsPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainFunctionsPanelMouseExited
        Color originalColor = new Color(153,153,153);
        
        mainFunctionsPanel.setBorder(BorderFactory.createLineBorder(originalColor, 3));
    }//GEN-LAST:event_mainFunctionsPanelMouseExited

    private void mainPatronsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPatronsLabelMouseClicked
        mainPanel.setVisible(false);
        patronsMainPanel.setVisible(true);
        
        DAPUtil.setScreenSize("patrons");

        patronsAllPatronsButton.setVisible(false);
        toggleEnableBackupButton(false);
    }//GEN-LAST:event_mainPatronsLabelMouseClicked

    private void mainCatalogLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainCatalogLabelMouseClicked
        catalogMainPanel.setVisible(true);//goes to catalog panel after closing current panel
        mainPanel.setVisible(false);
        catalogFullCatalogButton.setVisible(false);
       
        DAPUtil.setScreenSize("catalog");
        
        toggleEnableBackupButton(false);
    }//GEN-LAST:event_mainCatalogLabelMouseClicked

    private void mainTypesLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainTypesLabelMouseClicked
        typesMainPanel.setVisible(true); //goes to types panel after closing current panel
        mainPanel.setVisible(false);

        DAPUtil.setScreenSize("types");
        
        toggleEnableBackupButton(false);
    }//GEN-LAST:event_mainTypesLabelMouseClicked

    private void mainCheckoutLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainCheckoutLabelMouseClicked
        checkoutMainPanel.setVisible(true);//goes to the checkout panel after closing current panel
        mainPanel.setVisible(false);
        
        checkoutItemsCurrentlyCheckedOutLabel.setText("");
        checkoutPatronNumberTextField.requestFocus();
        
        DAPMain.mainFrame.setBounds(DAPMain.mainFrame.getX(),DAPMain.mainFrame.getY(),800,560);
        
        toggleEnableBackupButton(false);
    }//GEN-LAST:event_mainCheckoutLabelMouseClicked

    private void mainPatronsLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPatronsLabelMouseEntered
        mainFunctionsPanel.setBorder(BorderFactory.createLineBorder(Color.ORANGE, 3)); //sets the panel's border upon enter
    }//GEN-LAST:event_mainPatronsLabelMouseEntered

    private void mainReportsLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainReportsLabelMouseEntered
        mainFunctionsPanel.setBorder(BorderFactory.createLineBorder(Color.ORANGE, 3)); //sets the panel's border upon enter
    }//GEN-LAST:event_mainReportsLabelMouseEntered

    private void mainTypesLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainTypesLabelMouseEntered
        mainFunctionsPanel.setBorder(BorderFactory.createLineBorder(Color.ORANGE, 3)); //sets the panel's border upon enter
    }//GEN-LAST:event_mainTypesLabelMouseEntered

    private void mainCatalogLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainCatalogLabelMouseEntered
        mainFunctionsPanel.setBorder(BorderFactory.createLineBorder(Color.ORANGE, 3)); //sets the panel's border upon enter
    }//GEN-LAST:event_mainCatalogLabelMouseEntered

    private void checkoutReturnPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutReturnPanelMouseEntered
        Color originalColor = new Color(153,153,153);
        checkoutReturnPanel.setBorder(BorderFactory.createLineBorder(Color.ORANGE,3)); //sets the panel's border upon enter
        mainFunctionsPanel.setBorder(BorderFactory.createLineBorder(originalColor,3));
    }//GEN-LAST:event_checkoutReturnPanelMouseEntered

    private void mainCheckoutLabelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainCheckoutLabelMouseEntered
        checkoutReturnPanel.setBorder(BorderFactory.createLineBorder(Color.ORANGE,3)); //sets the panel's border upon enter
    }//GEN-LAST:event_mainCheckoutLabelMouseEntered

    private void checkoutReturnPanelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutReturnPanelMouseExited
        Color originalColor = new Color(153,153,153);
        
        checkoutReturnPanel.setBorder(BorderFactory.createLineBorder(originalColor, 3)); //sets the panel's border to the original grey color
    }//GEN-LAST:event_checkoutReturnPanelMouseExited

    private void saveChangesMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveChangesMenuItemActionPerformed
        DataInit.write("patrons.txt", "patrons",""); //writes all txt files
        DataInit.write("library.txt", "library","");
        DataInit.write("types.txt", "types","");
        DataInit.write("itemsout.txt", "itemsout","");
        // TODO add your handling code here:
    }//GEN-LAST:event_saveChangesMenuItemActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
    }//GEN-LAST:event_formWindowClosed

    private void mainReportsLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainReportsLabelMouseClicked
        
        mainPanel.setVisible(false);
        DAPUtil.setScreenSize("reports");
        reportsAllItemsRadioButton.setSelected(true);
        reportsCheckedOutItemsRadioButton.setSelected(false);
        reportsSortDateRadioButton.setSelected(true);
        reportsSortDateRadioButton.setEnabled(false);
        reportsSortPatronRadioButton.setEnabled(false);
        
        String[] typesComboBoxList = new String[DAPMain.typesMap.keySet().size()+1];
        typesComboBoxList[0] = "All";
        int i = 1;
        for(String type: DAPMain.typesMap.keySet())
        {
            typesComboBoxList[i] = type;
            i++;
        }
        
        reportsTypesComboBox.setModel(new DefaultComboBoxModel(typesComboBoxList));
        reportsTypesComboBox.setSelectedIndex(0);
        
        reportMainPanel.setVisible(true);
        reportTextArea.setText(LibrarySort.printItemsList("ALL"));
        reportTextArea.setCaretPosition(0);
        
        toggleEnableBackupButton(false);
    }//GEN-LAST:event_mainReportsLabelMouseClicked

    private void mainMenuHelpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuHelpActionPerformed
       
    }//GEN-LAST:event_mainMenuHelpActionPerformed

    private void mainMenuHelpMenuKeyPressed(javax.swing.event.MenuKeyEvent evt) {//GEN-FIRST:event_mainMenuHelpMenuKeyPressed

    }//GEN-LAST:event_mainMenuHelpMenuKeyPressed

    
   private void articleEditorPaneHyperlinkUpdate(HyperlinkEvent evt)
   {
                                                       

     if (evt.getEventType() == HyperlinkEvent.EventType.ACTIVATED)
     {
       URL target = evt.getURL();
       try
       {
          helpPane.setPage(target);
       }catch (IOException ex)
          {
           DAP.displayErrorMessage("Could not find help file: "+ex);

          }
      }
    }
    
    private void mainMenuHelpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainMenuHelpMouseClicked
     
    }//GEN-LAST:event_mainMenuHelpMouseClicked

    private void mainPanelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mainPanelMouseEntered
        Color originalColor = new Color(153,153,153); 
        
        mainFunctionsPanel.setBorder(BorderFactory.createLineBorder(originalColor,3));
        checkoutReturnPanel.setBorder(BorderFactory.createLineBorder(originalColor,3));
    }//GEN-LAST:event_mainPanelMouseEntered

    private void helpContentsMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_helpContentsMenuItemActionPerformed

       helpPane.setContentType("text/html"); //sets the text of the help pane with the help html file
       helpPane.setEditable(false);      
       
       int index = 0;
       String currentScreen = DAPUtil.getCurrentScreen();
       
       if(currentScreen.equals("general"))
           index = 0;
       else if(currentScreen.equals("patrons"))
           index = 1;
       else if(currentScreen.equals("types"))
           index = 2;
       else if(currentScreen.equals("catalog"))
           index = 3;
       else if(currentScreen.equals("checkout"))
           index = 4;
       else if(currentScreen.equals("reports"))
           index = 5;
       
       helpTopicsList.setSelectedIndex(index);
       
       URL myurl = this.getClass().getResource("help/"+DAPUtil.getCurrentScreen()+".html");
       
       
       try
       {
              helpPane.setPage(myurl);
                   
       }catch (IOException ex) 
      {
              //DAP.displayErrorMessage("Could not find help file: "+ex);
	      helpPane.setText("Could not find help file: ");

      }

        
          mainHelpFrame.setVisible(true);
          
         
    }//GEN-LAST:event_helpContentsMenuItemActionPerformed

    private void reportsCheckedOutItemsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsCheckedOutItemsRadioButtonActionPerformed
        reportsSortDateRadioButton.setEnabled(true);
        reportsSortPatronRadioButton.setEnabled(true);
        
        reportsTypesComboBox.setEnabled(false);
        reportsTypesComboBox.setSelectedIndex(0);
        
        reportTextArea.setText(LibrarySort.printItemsOutList("date"));
        reportTextArea.setCaretPosition(0);
        
        
    }//GEN-LAST:event_reportsCheckedOutItemsRadioButtonActionPerformed

    private void reportsAllItemsRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsAllItemsRadioButtonActionPerformed
        reportsSortDateRadioButton.setEnabled(false);
        reportsSortPatronRadioButton.setEnabled(false);
        
        reportsSortDateRadioButton.setSelected(true);
        
        reportsTypesComboBox.setEnabled(true);
        
        reportTextArea.setText(LibrarySort.printItemsList("ALL"));
        reportTextArea.setCaretPosition(0);
        
        
    }//GEN-LAST:event_reportsAllItemsRadioButtonActionPerformed

    private void reportsSortDateRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsSortDateRadioButtonActionPerformed
        reportTextArea.setText(LibrarySort.printItemsOutList("date"));
        reportTextArea.setCaretPosition(0);

    }//GEN-LAST:event_reportsSortDateRadioButtonActionPerformed

    private void reportsSortPatronRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsSortPatronRadioButtonActionPerformed
        reportTextArea.setText(LibrarySort.printItemsOutList("patrons"));
        reportTextArea.setCaretPosition(0);

    }//GEN-LAST:event_reportsSortPatronRadioButtonActionPerformed

    private void patronSearchDialogSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronSearchDialogSearchButtonActionPerformed
        DAPUtil.search("patronSearchDialog",patronSearchDialogComboBox.getSelectedItem().toString(),patronSearchDialogSearchTextField.getText());
    }//GEN-LAST:event_patronSearchDialogSearchButtonActionPerformed

    private void patronSearchDialogSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronSearchDialogSearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_patronSearchDialogSearchTextFieldActionPerformed

    private void patronSearchDialogSearchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_patronSearchDialogSearchTextFieldFocusGained
        patronSearchDialogSearchTextField.selectAll();
    }//GEN-LAST:event_patronSearchDialogSearchTextFieldFocusGained

    private void patronSearchSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronSearchSelectButtonActionPerformed
        int index = patronSearchTable.getSelectedRow();
        
        if(index != -1)
        {
            checkoutPatronNumberTextField.setText(DAPMain.patronsData[index][0]);
            
            checkoutPatronNameTextField.setText(DAPMain.patronsData[index][1]+" "+DAPMain.patronsData[index][2]);
            
            ItemsOut.checkoutTableInit();
            
            patronSearchDialog.setVisible(false);
            
            DataInit.hashmapToArrayPatrons();
        }        
    }//GEN-LAST:event_patronSearchSelectButtonActionPerformed

    private void catalogSearchSelectButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogSearchSelectButtonActionPerformed
        int index = catalogSearchTable.getSelectedRow();
        
        if(index != -1)
        {
            checkoutItemNumberTextField.setText(DAPMain.itemsData[index][0]);
            
            checkoutTitleTextField.setText(DAPMain.itemsData[index][1]);
            checkoutAuthorTextField.setText(DAPMain.itemsData[index][2]);
            checkoutTypeTextField.setText(DAPMain.itemsData[index][4]);                        
            
            DAP.checkoutCheckoutButton.setEnabled(true);
            
            catalogSearchDialog.setVisible(false);
                        
            DataInit.hashmapToArrayLibrary();
        } 
    }//GEN-LAST:event_catalogSearchSelectButtonActionPerformed

    private void catalogSearchDialogSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogSearchDialogSearchButtonActionPerformed
        DAPUtil.search("catalogSearchDialog",catalogSearchDialogComboBox.getSelectedItem().toString(),catalogSearchDialogSearchTextField.getText());
    }//GEN-LAST:event_catalogSearchDialogSearchButtonActionPerformed

    private void catalogSearchDialogSearchTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogSearchDialogSearchTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catalogSearchDialogSearchTextFieldActionPerformed

    private void catalogSearchDialogSearchTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_catalogSearchDialogSearchTextFieldFocusGained
        catalogSearchDialogSearchTextField.selectAll();
    }//GEN-LAST:event_catalogSearchDialogSearchTextFieldFocusGained

    private void catalogSearchCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogSearchCancelButtonActionPerformed
        catalogSearchDialog.setVisible(false);
        DataInit.hashmapToArrayLibrary();
    }//GEN-LAST:event_catalogSearchCancelButtonActionPerformed

    private void patronSearchCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_patronSearchCancelButtonActionPerformed
        patronSearchDialog.setVisible(false);
        DataInit.hashmapToArrayPatrons();
    }//GEN-LAST:event_patronSearchCancelButtonActionPerformed

    private void checkoutPatronSearchLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutPatronSearchLabelMouseClicked
        DataInit.hashmapToArrayPatrons();
        patronSearchTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.patronsData, DAPMain.patronsHeader));
        patronSearchDialog.setVisible(true);
    }//GEN-LAST:event_checkoutPatronSearchLabelMouseClicked

    private void checkoutCatalogSearchLabelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_checkoutCatalogSearchLabelMouseClicked
        if(DAPMain.patronsMap.get(checkoutPatronNumberTextField.getText())==null)
        {
            checkoutPatronNumberTextField.setText("Enter Valid Patron# First !");
            checkoutPatronNumberTextField.selectAll();
            
            checkoutPatronNumberTextField.requestFocus();

        }
        else
        {
            DataInit.hashmapToArrayLibrary();
            catalogSearchTable.setModel(new javax.swing.table.DefaultTableModel(DAPMain.itemsData, DAPMain.itemsHeader));
            catalogSearchDialog.setVisible(true);
        }    
    }//GEN-LAST:event_checkoutCatalogSearchLabelMouseClicked

    private void catalogSearchDialogSearchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catalogSearchDialogSearchTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)//if enter is pressed, search
        {
            DAPUtil.search("catalogSearchDialog",catalogSearchDialogComboBox.getSelectedItem().toString(),catalogSearchDialogSearchTextField.getText());
        }
    }//GEN-LAST:event_catalogSearchDialogSearchTextFieldKeyPressed

    private void patronSearchDialogSearchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patronSearchDialogSearchTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)//if enter is pressed, search
        {
            DAPUtil.search("patronSearchDialog",patronSearchDialogComboBox.getSelectedItem().toString(),patronSearchDialogSearchTextField.getText());
        }
    }//GEN-LAST:event_patronSearchDialogSearchTextFieldKeyPressed

    private void checkoutPatronNumberTextFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_checkoutPatronNumberTextFieldFocusGained
        checkoutPatronNumberTextField.selectAll();
    }//GEN-LAST:event_checkoutPatronNumberTextFieldFocusGained

    private void mainSearchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mainSearchTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)//if enter is pressed, search
        {
            String searchCategory = mainSearchComboBox.getSelectedItem().toString();
            String search = mainSearchTextField.getText();  

            search = search.toLowerCase();

            if(!search.equals("Search Catalog...") && !search.equals(""))
                DAPUtil.search("mainPanel",searchCategory,search);
        }
    }//GEN-LAST:event_mainSearchTextFieldKeyPressed

    private void catalogSearchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catalogSearchTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            String searchType = catalogSearchComboBox.getSelectedItem().toString();
            String searchText = catalogSearchTextField.getText().toLowerCase();

            DAPUtil.search("catalogMainPanel",searchType,searchText);
        }
    }//GEN-LAST:event_catalogSearchTextFieldKeyPressed

    private void patronSearchTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_patronSearchTextFieldKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            String searchType = patronSearchComboBox.getSelectedItem().toString();
            String searchText = patronSearchTextField.getText().toLowerCase();

            DAPUtil.search("patronsMainPanel",searchType,searchText);
        }
    }//GEN-LAST:event_patronSearchTextFieldKeyPressed

    private void helpTopicsListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_helpTopicsListValueChanged

        //updates the help pane with the right html file when the selected value in the jlist is changed
        
        String helpFileName = "help/General.html";
        
        if (helpTopicsList.isSelectedIndex(0)) {
            helpTopicLabel.setText("General");
            helpFileName = "help/general.html";            
        } else if (helpTopicsList.isSelectedIndex(1)) {
            helpTopicLabel.setText("Patrons");
            helpFileName = "help/patrons.html";
        } else if (helpTopicsList.isSelectedIndex(2)) {
            helpTopicLabel.setText("Types");
            helpFileName = "help/types.html";
        } else if (helpTopicsList.isSelectedIndex(3)) {
            helpTopicLabel.setText("Catalog");
            helpFileName = "help/catalog.html";
        } else if (helpTopicsList.isSelectedIndex(4)) {
            helpTopicLabel.setText("Checkout & Returns");
            helpFileName = "help/checkout.html";
        } else if (helpTopicsList.isSelectedIndex(5)) {
            helpTopicLabel.setText("Reports");
            helpFileName = "help/reports.html";
        } else if (helpTopicsList.isSelectedIndex(6)) {
            helpTopicLabel.setText("Backup & Restore");
            helpFileName = "help/Backup.html";
        } else if (helpTopicsList.isSelectedIndex(7)) {
            helpTopicLabel.setText("About");
            helpFileName = "help/about.html";
        }
        
       helpPane.setContentType("text/html");
       helpPane.setEditable(false);

       helpPane.addHyperlinkListener(new HyperlinkListener() 
	   {
           public void hyperlinkUpdate(HyperlinkEvent evt) 
		   {
               articleEditorPaneHyperlinkUpdate(evt);
           }
       });

       URL myurl = this.getClass().getResource(helpFileName);
       
	   try
       {
		   helpPane.setPage(myurl);
       }catch (IOException ex) 
      {
              //DAP.displayErrorMessage("Could not find help file: "+ex);
	      helpPane.setText("Could not find help file: "+helpFileName);

      }

        
        
        
    }//GEN-LAST:event_helpTopicsListValueChanged

    private void aboutMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aboutMenuItemActionPerformed
        aboutDialog.setVisible(true);

        
       aboutEditorPane.setContentType("text/html");//sets the about pane's text with the html file
       aboutEditorPane.setEditable(false);

       aboutEditorPane.addHyperlinkListener(new HyperlinkListener() 
	   {
           public void hyperlinkUpdate(HyperlinkEvent evt) 
		   {
               articleEditorPaneHyperlinkUpdate(evt);
           }
       });

       URL url = this.getClass().getResource("help/about.html");
       
	   try
       {
		   aboutEditorPane.setPage(url);
       }catch (IOException ex) 
      {
	      aboutEditorPane.setText("Could not find help file: help/about.html");

      }

    }//GEN-LAST:event_aboutMenuItemActionPerformed

    private void catalogSearchComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_catalogSearchComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_catalogSearchComboBoxActionPerformed

    private void mainHelpFrameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_mainHelpFrameFocusGained
    }//GEN-LAST:event_mainHelpFrameFocusGained

    private void mainHelpFrameWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_mainHelpFrameWindowOpened

    }//GEN-LAST:event_mainHelpFrameWindowOpened

    private void mainHelpFrameWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_mainHelpFrameWindowStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_mainHelpFrameWindowStateChanged

    private void backupBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backupBrowseButtonActionPerformed
        fileChooser.setControlButtonsAreShown(false);
        fileChooserDialog.setVisible(true);
    }//GEN-LAST:event_backupBrowseButtonActionPerformed

    private void generateBackupMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBackupMenuItemActionPerformed
        backupDirectoryTextField.setText(fileChooser.getCurrentDirectory().getPath());
        backupDialog.setVisible(true);
    }//GEN-LAST:event_generateBackupMenuItemActionPerformed

    private void generateBackupButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBackupButton1ActionPerformed
        backupDialog.setVisible(false);
    }//GEN-LAST:event_generateBackupButton1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try
        {
            String path = fileChooser.getSelectedFile().getPath();        
            backupDirectoryTextField.setText(path);
            restoreDirectoryTextField.setText(path);
            fileChooserDialog.setVisible(false);
        }
        catch(Exception e)
        {
            DAP.displayErrorMessage("Please choose a directory.");
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void generateBackupButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateBackupButtonActionPerformed
        String path = backupDirectoryTextField.getText();  
        
        File directory = new File(path);
        if(directory.isDirectory())
        {
            DataInit.write("patrons.bak", "patrons",path); //writes all txt files
            DataInit.write("library.bak", "library",path);
            DataInit.write("types.bak", "types",path);
            DataInit.write("itemsout.bak", "itemsout",path);
            backupDialog.setVisible(false);
        }
        else
        {
            DAP.displayErrorMessage("Please choose an existing directory.");
        }
    }//GEN-LAST:event_generateBackupButtonActionPerformed

    private void catalogSearchTextFieldCaretUpdate(javax.swing.event.CaretEvent evt) {//GEN-FIRST:event_catalogSearchTextFieldCaretUpdate
        
    }//GEN-LAST:event_catalogSearchTextFieldCaretUpdate

    private void catalogSearchTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_catalogSearchTextFieldKeyTyped

    }//GEN-LAST:event_catalogSearchTextFieldKeyTyped

    private void displayMessageDialogOkButtonKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_displayMessageDialogOkButtonKeyPressed
        if(evt.getKeyCode() == KeyEvent.VK_ENTER)
        {
            displayMessageDialog.setVisible(false);
        }
    }//GEN-LAST:event_displayMessageDialogOkButtonKeyPressed

    private void restoreBrowseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreBrowseButtonActionPerformed
        fileChooser.setControlButtonsAreShown(false);
        fileChooserDialog.setVisible(true);
    }//GEN-LAST:event_restoreBrowseButtonActionPerformed

    private void generateRestoreButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateRestoreButtonActionPerformed
        restoreCheckDialog.setVisible(true);
    }//GEN-LAST:event_generateRestoreButtonActionPerformed

    private void generateRestoreCancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateRestoreCancelButtonActionPerformed
        restoreDialog.setVisible(false);
        if(DAPMain.filesNotFoundError)
        {
            DAP.displayErrorMessage("Because there is no data to read the program will now close.");
            System.exit(0);
        }
    }//GEN-LAST:event_generateRestoreCancelButtonActionPerformed

    private void mainMenuFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mainMenuFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mainMenuFileActionPerformed

    private void restoreBackupMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreBackupMenuItemActionPerformed
        restoreDialog.setVisible(true);
        //restoreDirectoryTextField.setText(fileChooser.getCurrentDirectory().getPath());
        restoreDirectoryTextField.setText(fileChooser.getCurrentDirectory().getPath());
    }//GEN-LAST:event_restoreBackupMenuItemActionPerformed

    private void restoreDirectoryTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreDirectoryTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_restoreDirectoryTextFieldActionPerformed

    private void restoreCheckDialogNoButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreCheckDialogNoButtonActionPerformed
        restoreCheckDialog.setVisible(false);
    }//GEN-LAST:event_restoreCheckDialogNoButtonActionPerformed

    private void restoreCheckYesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_restoreCheckYesButtonActionPerformed
        String path = restoreDirectoryTextField.getText();

        File directory = new File(path);
        
        if(directory.isDirectory())
        {
            DataInit.read("types.bak", "types",path);
            DataInit.hashmapToArrayTypes();

            DataInit.read("library.bak", "library",path);
            DataInit.hashmapToArrayLibrary();

            DataInit.read("patrons.bak", "patrons",path);
            DataInit.hashmapToArrayPatrons();

            DataInit.read("itemsout.bak", "itemsout",path);

            restoreDialog.setVisible(false);
            
            DataInit.write("patrons.txt", "patrons",""); //writes all txt files
            DataInit.write("library.txt", "library","");
            DataInit.write("types.txt", "types","");
            DataInit.write("itemsout.txt", "itemsout","");
        }
        else
        {
            DAP.displayErrorMessage("Please choose an existing directory.");
        }
          
        restoreCheckDialog.setVisible(false);
        restoreDialog.setVisible(false);
    }//GEN-LAST:event_restoreCheckYesButtonActionPerformed

    private void reportsTypesComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reportsTypesComboBoxActionPerformed
        String type = reportsTypesComboBox.getSelectedItem().toString();
        if(type.equals("All"))
            type = "ALL";
        
        reportTextArea.setText(LibrarySort.printItemsList(type));
        reportTextArea.setCaretPosition(0);
    }//GEN-LAST:event_reportsTypesComboBoxActionPerformed

    private void checkoutPatronNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkoutPatronNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkoutPatronNumberTextFieldActionPerformed

    
    
    /**
     * 
     * @param message The message to display to the user in a JDialogBox.
     */
    public static void displayErrorMessage(String message)
    {
        displayMessageDialogTextArea.setText(message);//displays the passed in string in an error dialog box                
        displayMessageDialogOkButton.requestFocus();
        displayMessageDialog.setVisible(true);
        displayMessageDialogOkButton.requestFocus();              
    }
    
    
    
    
    
    private void refreshTextFields(String screen,boolean clearTextFields,boolean setEditableTextFields)
    {
        if(screen.equals("catalog"))
        {
            if(clearTextFields)
            {
                catalogTypeTextField.setText("");
                catalogAuthorTextField.setText("");
                catalogItemTextField.setText("");
                catalogPublishedDateTextField.setText("");
                catalogItemNumberTextField.setText("");
            }
            else
            {
                catalogItemNumberTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][0]);            
                catalogItemTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][1]);
                catalogAuthorTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][2]);
                catalogPublishedDateTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][3]);
                catalogTypeTextField.setText(DAPMain.itemsData[catalogTable.getSelectedRow()][4]);
            }
            
            if(setEditableTextFields)
            {
                catalogTypeTextField.setEditable(true);
                catalogAuthorTextField.setEditable(true);
                catalogItemTextField.setEditable(true);
                catalogPublishedDateTextField.setEditable(true);
                catalogItemNumberTextField.setEditable(true);
            }
            else
            {
                catalogTypeTextField.setEditable(false);
                catalogAuthorTextField.setEditable(false);
                catalogItemTextField.setEditable(false);
                catalogPublishedDateTextField.setEditable(false);
                catalogItemNumberTextField.setEditable(false);
            }
        }
        else if(screen.equals("patrons"))
        {
            if(clearTextFields)
            {
                patronNumberTextField.setText("");
                firstNameTextField.setText("");
                lastNameTextField.setText("");
                emailTextField.setText("");
                phoneTextField.setText("");
                addressTextField.setText("");
                cityTextField.setText("");
                stateTextField.setText("");
                zipCodeTextField.setText("");
            }
            else
            {
                patronNumberTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][0]);
                firstNameTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][1]);
                lastNameTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][2]);
                emailTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][3]);
                phoneTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][4]);
                addressTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][5]);
                cityTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][6]);   
                stateTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][7]);
                zipCodeTextField.setText(DAPMain.patronsData[patronsTable.getSelectedRow()][8]);
            }
            
            if(setEditableTextFields)
            {
                patronNumberTextField.setEditable(true);
                firstNameTextField.setEditable(true);
                lastNameTextField.setEditable(true);
                emailTextField.setEditable(true);
                phoneTextField.setEditable(true);
                addressTextField.setEditable(true);
                cityTextField.setEditable(true);
                stateTextField.setEditable(true);
                zipCodeTextField.setEditable(true);
            }
            else
            {
                patronNumberTextField.setEditable(false);//makes all fields uneditable
                firstNameTextField.setEditable(false);
                lastNameTextField.setEditable(false);
                emailTextField.setEditable(false);
                phoneTextField.setEditable(false);
                addressTextField.setEditable(false);
                cityTextField.setEditable(false);
                stateTextField.setEditable(false);
                zipCodeTextField.setEditable(false);
            }
        }
    }
    
    
    private void toggleEnableBackupButton(boolean toggle)
    {
        generateBackupMenuItem.setEnabled(toggle);
        restoreBackupMenuItem.setEnabled(toggle);
    }
    
    
    
    /**
     * @param args the command line arguments
     */



  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog aboutDialog;
    private javax.swing.JEditorPane aboutEditorPane;
    private javax.swing.JMenuItem aboutMenuItem;
    public static javax.swing.JTextField addressTextField;
    private javax.swing.JButton backupBrowseButton;
    private javax.swing.JDialog backupDialog;
    private javax.swing.JTextField backupDirectoryTextField;
    public static javax.swing.JTextField catalogAuthorTextField;
    public static javax.swing.JButton catalogCancelButton;
    public static javax.swing.JButton catalogEditButton;
    public static javax.swing.JButton catalogFullCatalogButton;
    private javax.swing.JButton catalogHomeButton;
    public static javax.swing.JTextField catalogItemNumberTextField;
    public static javax.swing.JTextField catalogItemTextField;
    private javax.swing.JLabel catalogMainLabel2;
    public static javax.swing.JPanel catalogMainPanel;
    public static javax.swing.JScrollPane catalogMainScrollPane2;
    public static javax.swing.JButton catalogNewButton;
    public static javax.swing.JTextField catalogPublishedDateTextField;
    public static javax.swing.JButton catalogRemoveButton;
    private javax.swing.JDialog catalogRemoveDialog;
    private javax.swing.JLabel catalogRemoveDialogItemName;
    private javax.swing.JButton catalogRemoveDialogNoButton;
    private javax.swing.JButton catalogRemoveDialogYesButton;
    public static javax.swing.JButton catalogSaveButton;
    public static javax.swing.JButton catalogSearchButton;
    private javax.swing.JButton catalogSearchCancelButton;
    private javax.swing.JComboBox catalogSearchComboBox;
    private javax.swing.JDialog catalogSearchDialog;
    private javax.swing.JComboBox catalogSearchDialogComboBox;
    private javax.swing.JButton catalogSearchDialogSearchButton;
    private javax.swing.JTextField catalogSearchDialogSearchTextField;
    private javax.swing.JPanel catalogSearchPanel;
    private javax.swing.JPanel catalogSearchPanel2;
    private javax.swing.JPanel catalogSearchPanel4;
    private javax.swing.JButton catalogSearchSelectButton;
    public static javax.swing.JTable catalogSearchTable;
    private javax.swing.JTextField catalogSearchTextField;
    public static javax.swing.JTable catalogTable;
    public static javax.swing.JTextField catalogTypeTextField;
    private javax.swing.JTextField checkoutAuthorTextField;
    private javax.swing.JLabel checkoutCatalogSearchLabel;
    public static javax.swing.JButton checkoutCheckoutButton;
    private javax.swing.JTextField checkoutItemNumberTextField;
    public static javax.swing.JLabel checkoutItemsCurrentlyCheckedOutLabel;
    public static javax.swing.JPanel checkoutMainPanel;
    private javax.swing.JTextField checkoutPatronNameTextField;
    public static javax.swing.JTextField checkoutPatronNumberTextField;
    private javax.swing.JLabel checkoutPatronSearchLabel;
    private javax.swing.JButton checkoutReturnAllButton;
    private javax.swing.JButton checkoutReturnButton;
    private javax.swing.JPanel checkoutReturnPanel;
    public static javax.swing.JTable checkoutTable;
    private javax.swing.JTextField checkoutTitleTextField;
    private javax.swing.JTextField checkoutTypeTextField;
    public static javax.swing.JTextField cityTextField;
    public static javax.swing.JLabel displayDate;
    public static javax.swing.JDialog displayMessageDialog;
    public static javax.swing.JButton displayMessageDialogOkButton;
    public static javax.swing.JTextArea displayMessageDialogTextArea;
    public static javax.swing.JTextField emailTextField;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JDialog fileChooserDialog;
    public static javax.swing.JTextField firstNameTextField;
    private javax.swing.JButton generateBackupButton;
    private javax.swing.JButton generateBackupButton1;
    private javax.swing.JMenuItem generateBackupMenuItem;
    private javax.swing.JButton generateRestoreButton;
    private javax.swing.JButton generateRestoreCancelButton;
    private javax.swing.JMenuItem helpContentsMenuItem;
    private javax.swing.JEditorPane helpPane;
    private javax.swing.JPanel helpPanel;
    private javax.swing.JScrollPane helpScrollPane;
    private javax.swing.JScrollPane helpScrollPane2;
    private javax.swing.JSplitPane helpSplitPane;
    public static javax.swing.JLabel helpTopicLabel;
    public static javax.swing.JList helpTopicsList;
    private javax.swing.JCheckBoxMenuItem instaSearchOnMenuItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane12;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextPane jTextPane1;
    public static javax.swing.JTextField lastNameTextField;
    private javax.swing.JLabel mainCatalogLabel;
    private javax.swing.JLabel mainCheckoutLabel;
    private javax.swing.JPanel mainFunctionsPanel;
    public static javax.swing.JFrame mainHelpFrame;
    private javax.swing.JMenu mainMenuFile;
    private javax.swing.JMenu mainMenuHelp;
    private javax.swing.JMenu mainMenuOptions;
    public static javax.swing.JPanel mainPanel;
    private javax.swing.JLabel mainPatronsLabel;
    private javax.swing.JLabel mainReportsLabel;
    private javax.swing.JButton mainSearchButton;
    private javax.swing.JComboBox mainSearchComboBox;
    private javax.swing.JPanel mainSearchPanel;
    public static javax.swing.JTextField mainSearchTextField;
    private javax.swing.JLabel mainTypesLabel;
    private javax.swing.JMenuBar menuBar;
    public static javax.swing.JTextField patronNumberTextField;
    public static javax.swing.JButton patronSearchButton;
    private javax.swing.JButton patronSearchCancelButton;
    private javax.swing.JComboBox patronSearchComboBox;
    private javax.swing.JDialog patronSearchDialog;
    private javax.swing.JComboBox patronSearchDialogComboBox;
    private javax.swing.JButton patronSearchDialogSearchButton;
    private javax.swing.JTextField patronSearchDialogSearchTextField;
    private javax.swing.JPanel patronSearchPanel;
    private javax.swing.JButton patronSearchSelectButton;
    public static javax.swing.JTable patronSearchTable;
    private javax.swing.JTextField patronSearchTextField;
    public static javax.swing.JButton patronsAllPatronsButton;
    public static javax.swing.JButton patronsCancelButton;
    public static javax.swing.JButton patronsEditButton;
    private javax.swing.JButton patronsHomeButton;
    public static javax.swing.JPanel patronsMainPanel;
    public static javax.swing.JButton patronsNewButton;
    public static javax.swing.JButton patronsRemoveButton;
    private javax.swing.JDialog patronsRemoveDialog;
    private javax.swing.JButton patronsRemoveDialogNoButton;
    private javax.swing.JLabel patronsRemoveDialogPatronName;
    private javax.swing.JButton patronsRemoveDialogYesButton;
    public static javax.swing.JButton patronsSaveButton;
    public static javax.swing.JTable patronsTable;
    public static javax.swing.JTextField phoneTextField;
    public static javax.swing.JPanel reportMainPanel;
    private javax.swing.JButton reportPrintButton;
    public static javax.swing.JTextArea reportTextArea;
    public static javax.swing.JRadioButton reportsAllItemsRadioButton;
    public static javax.swing.ButtonGroup reportsButtonGroup;
    public static javax.swing.JRadioButton reportsCheckedOutItemsRadioButton;
    private javax.swing.JButton reportsHomeButton;
    public static javax.swing.JScrollPane reportsScrollPane;
    public static javax.swing.JRadioButton reportsSortDateRadioButton;
    public static javax.swing.JRadioButton reportsSortPatronRadioButton;
    private javax.swing.JComboBox reportsTypesComboBox;
    private javax.swing.JMenuItem restoreBackupMenuItem;
    private javax.swing.JButton restoreBrowseButton;
    private javax.swing.JDialog restoreCheckDialog;
    private javax.swing.JButton restoreCheckDialogNoButton;
    private javax.swing.JButton restoreCheckYesButton;
    public static javax.swing.JDialog restoreDialog;
    private javax.swing.JTextField restoreDirectoryTextField;
    private javax.swing.JMenuItem saveChangesMenuItem;
    public static javax.swing.JPanel searchResultsPanel;
    public static javax.swing.JTable searchResultsTable;
    public static javax.swing.ButtonGroup sortButtonGroup;
    public static javax.swing.JTextField stateTextField;
    public static javax.swing.JButton typesCancelButton;
    public static javax.swing.JTextArea typesDescriptionTextField;
    public static javax.swing.JButton typesEditButton;
    private javax.swing.JButton typesHomeButton;
    private javax.swing.JFrame typesListFrame;
    private javax.swing.JTable typesListTable;
    public static javax.swing.JPanel typesMainPanel;
    public static javax.swing.JButton typesNewButton;
    public static javax.swing.JButton typesRemoveButton;
    private javax.swing.JDialog typesRemoveDialog;
    private javax.swing.JButton typesRemoveDialogNoButton;
    private javax.swing.JLabel typesRemoveDialogTypeName;
    private javax.swing.JButton typesRemoveDialogYesButton;
    public static javax.swing.JButton typesSaveButton;
    public static javax.swing.JTable typesTable;
    public static javax.swing.JTextField typesTypeTextField;
    public static javax.swing.JTextField zipCodeTextField;
    // End of variables declaration//GEN-END:variables
}
